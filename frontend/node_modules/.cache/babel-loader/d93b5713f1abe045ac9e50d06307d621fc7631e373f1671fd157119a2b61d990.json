{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport './ProspectListWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProspectListWidget = ({\n  prospects,\n  onProspectsUpdate\n}) => {\n  _s();\n  const [selectedProspects, setSelectedProspects] = useState([]);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayedProspects, setDisplayedProspects] = useState([]);\n  const [itemsPerPage] = useState(5);\n\n  // État pour gérer les listes de prospects\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [listSearchTerm, setListSearchTerm] = useState('');\n\n  // Charger les prospects par lots pour le scroll infini\n  const loadMoreProspects = () => {\n    const startIndex = displayedProspects.length;\n    const filteredProspects = prospects.filter(prospect => {\n      var _prospect$nom, _prospect$prenom, _prospect$societe;\n      return ((_prospect$nom = prospect.nom) === null || _prospect$nom === void 0 ? void 0 : _prospect$nom.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$prenom = prospect.prenom) === null || _prospect$prenom === void 0 ? void 0 : _prospect$prenom.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$societe = prospect.societe) === null || _prospect$societe === void 0 ? void 0 : _prospect$societe.toLowerCase().includes(searchTerm.toLowerCase()));\n    });\n    const newProspects = filteredProspects.slice(startIndex, startIndex + itemsPerPage);\n    setDisplayedProspects(prev => [...prev, ...newProspects]);\n  };\n  useEffect(() => {\n    // Charger les listes de prospects\n    const fetchLists = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5001/api/lists', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setLists(response.data.lists);\n        setSelectedList(null); // Par défaut, afficher tous les prospects\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des listes de prospects:\", error);\n      }\n    };\n    fetchLists();\n  }, []);\n  useEffect(() => {\n    // Charger les prospects par liste ou tous les prospects\n    const fetchProspectsByList = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        let response;\n        if (selectedList) {\n          response = await axios.get(`http://localhost:5001/api/prospects/${selectedList}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        } else {\n          response = await axios.get('http://localhost:5001/api/prospects', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n        onProspectsUpdate(response.data.prospects);\n        setDisplayedProspects(response.data.prospects.slice(0, itemsPerPage));\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des prospects par liste:\", error);\n      }\n    };\n    fetchProspectsByList();\n  }, [selectedList, prospects]);\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 50) {\n        loadMoreProspects();\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [displayedProspects, searchTerm]);\n  const handleFileUpload = async data => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const formattedProspects = data.map(row => ({\n        prenom: row[0] || 'Non disponible',\n        nom: row[1] || 'Non disponible',\n        email: row[2] || 'Non disponible',\n        societe: row[3] || 'Non disponible',\n        linkedin: row[4] || 'Non disponible'\n      }));\n      for (const prospect of formattedProspects) {\n        await axios.post('http://localhost:5001/api/prospects/add', prospect, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      const response = await axios.get('http://localhost:5001/api/prospects', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        onProspectsUpdate(response.data.prospects);\n        setError('');\n        setShowImportModal(false);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'import des prospects:\", error);\n      setError(\"Erreur lors de l'import des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      for (const id of selectedProspects) {\n        await axios.delete(`http://localhost:5001/api/prospects/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      const response = await axios.get('http://localhost:5001/api/prospects', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        onProspectsUpdate(response.data.prospects);\n        setSelectedProspects([]);\n        setError('');\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression des prospects:\", error);\n      setError(\"Erreur lors de la suppression des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelectProspect = id => {\n    setSelectedProspects(prev => prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]);\n  };\n  const handleSelectAll = () => {\n    const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n    if (currentProspectIds.every(id => selectedProspects.includes(id))) {\n      setSelectedProspects(prev => prev.filter(id => !currentProspectIds.includes(id)));\n    } else {\n      setSelectedProspects(prev => [...new Set([...prev, ...currentProspectIds])]);\n    }\n  };\n\n  // Filtrer les listes en fonction du terme de recherche\n  const filteredLists = lists.filter(list => list.name.toLowerCase().includes(listSearchTerm.toLowerCase()));\n\n  // Créer une nouvelle liste\n  const createNewList = async () => {\n    if (newListName.trim() === '') return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5001/api/lists', {\n        name: newListName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setLists([...lists, response.data.list]);\n      setNewListName('');\n    } catch (error) {\n      console.error(\"Erreur lors de la création d'une nouvelle liste:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prospect-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Listes de Prospects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher une liste...\",\n        value: listSearchTerm,\n        onChange: e => setListSearchTerm(e.target.value),\n        className: \"list-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-names\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedList(null),\n          className: !selectedList ? 'active' : '',\n          children: \"Tous les prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedList(list._id),\n          className: selectedList === list._id ? 'active' : '',\n          children: list.name\n        }, list._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nom de la nouvelle liste\",\n        value: newListName,\n        onChange: e => setNewListName(e.target.value),\n        className: \"new-list-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewList,\n        className: \"btn add-list-btn\",\n        children: \"Cr\\xE9er une liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prospect-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(true),\n          className: \"btn import-btn\",\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteSelected,\n          className: `btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`,\n          disabled: loading || selectedProspects.length === 0,\n          children: \"Supprimer les prospects s\\xE9lectionn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectAll,\n          className: \"select-all-btn\",\n          children: displayedProspects.every(prospect => selectedProspects.includes(prospect._id)) ? \"Tout désélectionner\" : \"Sélectionner tout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Rechercher...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `prospect-content ${showImportModal ? 'dimmed' : ''}`,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prospect-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"prospect-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"S\\xE9lection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Soci\\xE9t\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"LinkedIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedProspects.map(prospect => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedProspects.includes(prospect._id),\n                    onChange: () => handleSelectProspect(prospect._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`,\n                    alt: `${prospect.prenom} ${prospect.nom}`,\n                    className: \"prospect-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [prospect.prenom, \" \", prospect.nom]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.email || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.societe || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: prospect.linkedin,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"linkedin-btn\",\n                    children: \"profil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this)]\n              }, prospect._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          onFileLoaded: handleFileUpload,\n          cssClass: \"csv-reader-input\",\n          label: \"Importer une liste CSV\",\n          parserOptions: {\n            header: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(false),\n          className: \"btn close-btn\",\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n_s(ProspectListWidget, \"6XwmXfMs1kBtvgjTRqdRmZTP76U=\");\n_c = ProspectListWidget;\nexport default ProspectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ProspectListWidget\");","map":{"version":3,"names":["React","useState","useEffect","CSVReader","axios","jsxDEV","_jsxDEV","ProspectListWidget","prospects","onProspectsUpdate","_s","selectedProspects","setSelectedProspects","showImportModal","setShowImportModal","searchTerm","setSearchTerm","error","setError","loading","setLoading","displayedProspects","setDisplayedProspects","itemsPerPage","lists","setLists","selectedList","setSelectedList","newListName","setNewListName","listSearchTerm","setListSearchTerm","loadMoreProspects","startIndex","length","filteredProspects","filter","prospect","_prospect$nom","_prospect$prenom","_prospect$societe","nom","toLowerCase","includes","prenom","societe","newProspects","slice","prev","fetchLists","token","localStorage","getItem","response","get","headers","Authorization","data","console","fetchProspectsByList","handleScroll","window","innerHeight","scrollY","document","documentElement","scrollHeight","addEventListener","removeEventListener","handleFileUpload","formattedProspects","map","row","email","linkedin","post","success","handleDeleteSelected","id","delete","handleSelectProspect","prospectId","handleSelectAll","currentProspectIds","_id","every","Set","filteredLists","list","name","createNewList","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","checked","src","alt","href","rel","onFileLoaded","cssClass","label","parserOptions","header","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport './ProspectListWidget.css';\n\nconst ProspectListWidget = ({ prospects, onProspectsUpdate }) => {\n    const [selectedProspects, setSelectedProspects] = useState([]);\n    const [showImportModal, setShowImportModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [displayedProspects, setDisplayedProspects] = useState([]);\n    const [itemsPerPage] = useState(5);\n\n    // État pour gérer les listes de prospects\n    const [lists, setLists] = useState([]);\n    const [selectedList, setSelectedList] = useState(null);\n    const [newListName, setNewListName] = useState('');\n    const [listSearchTerm, setListSearchTerm] = useState('');\n\n    // Charger les prospects par lots pour le scroll infini\n    const loadMoreProspects = () => {\n        const startIndex = displayedProspects.length;\n        const filteredProspects = prospects.filter(prospect =>\n            prospect.nom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            prospect.prenom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            prospect.societe?.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n        const newProspects = filteredProspects.slice(startIndex, startIndex + itemsPerPage);\n        setDisplayedProspects(prev => [...prev, ...newProspects]);\n    };\n\n    useEffect(() => {\n        // Charger les listes de prospects\n        const fetchLists = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://localhost:5001/api/lists', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setLists(response.data.lists);\n                setSelectedList(null); // Par défaut, afficher tous les prospects\n            } catch (error) {\n                console.error(\"Erreur lors du chargement des listes de prospects:\", error);\n            }\n        };\n        fetchLists();\n    }, []);\n\n    useEffect(() => {\n        // Charger les prospects par liste ou tous les prospects\n        const fetchProspectsByList = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                let response;\n                if (selectedList) {\n                    response = await axios.get(`http://localhost:5001/api/prospects/${selectedList}`, {\n                        headers: { Authorization: `Bearer ${token}` }\n                    });\n                } else {\n                    response = await axios.get('http://localhost:5001/api/prospects', {\n                        headers: { Authorization: `Bearer ${token}` }\n                    });\n                }\n                onProspectsUpdate(response.data.prospects);\n                setDisplayedProspects(response.data.prospects.slice(0, itemsPerPage));\n            } catch (error) {\n                console.error(\"Erreur lors du chargement des prospects par liste:\", error);\n            }\n        };\n        fetchProspectsByList();\n    }, [selectedList, prospects]);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 50) {\n                loadMoreProspects();\n            }\n        };\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [displayedProspects, searchTerm]);\n\n    const handleFileUpload = async (data) => {\n        try {\n            setLoading(true);\n            const token = localStorage.getItem('token');\n\n            const formattedProspects = data.map(row => ({\n                prenom: row[0] || 'Non disponible',\n                nom: row[1] || 'Non disponible',\n                email: row[2] || 'Non disponible',\n                societe: row[3] || 'Non disponible',\n                linkedin: row[4] || 'Non disponible'\n            }));\n\n            for (const prospect of formattedProspects) {\n                await axios.post('http://localhost:5001/api/prospects/add', prospect, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n            }\n\n            const response = await axios.get('http://localhost:5001/api/prospects', {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            if (response.data.success) {\n                onProspectsUpdate(response.data.prospects);\n                setError('');\n                setShowImportModal(false);\n            }\n        } catch (error) {\n            console.error(\"Erreur lors de l'import des prospects:\", error);\n            setError(\"Erreur lors de l'import des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteSelected = async () => {\n        try {\n            setLoading(true);\n            const token = localStorage.getItem('token');\n\n            for (const id of selectedProspects) {\n                await axios.delete(`http://localhost:5001/api/prospects/${id}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n            }\n\n            const response = await axios.get('http://localhost:5001/api/prospects', {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            if (response.data.success) {\n                onProspectsUpdate(response.data.prospects);\n                setSelectedProspects([]);\n                setError('');\n            }\n        } catch (error) {\n            console.error(\"Erreur lors de la suppression des prospects:\", error);\n            setError(\"Erreur lors de la suppression des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleSelectProspect = (id) => {\n        setSelectedProspects(prev =>\n            prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]\n        );\n    };\n\n    const handleSelectAll = () => {\n        const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n        if (currentProspectIds.every(id => selectedProspects.includes(id))) {\n            setSelectedProspects(prev => prev.filter(id => !currentProspectIds.includes(id)));\n        } else {\n            setSelectedProspects(prev => [...new Set([...prev, ...currentProspectIds])]);\n        }\n    };\n\n    // Filtrer les listes en fonction du terme de recherche\n    const filteredLists = lists.filter(list =>\n        list.name.toLowerCase().includes(listSearchTerm.toLowerCase())\n    );\n\n    // Créer une nouvelle liste\n    const createNewList = async () => {\n        if (newListName.trim() === '') return;\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.post('http://localhost:5001/api/lists', { name: newListName }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setLists([...lists, response.data.list]);\n            setNewListName('');\n        } catch (error) {\n            console.error(\"Erreur lors de la création d'une nouvelle liste:\", error);\n        }\n    };\n\n    return (\n        <div className=\"prospect-list-widget\">\n            {/* Colonne latérale pour les listes de prospects */}\n            <div className=\"list-sidebar\">\n                <h3>Listes de Prospects</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Rechercher une liste...\"\n                    value={listSearchTerm}\n                    onChange={(e) => setListSearchTerm(e.target.value)}\n                    className=\"list-search-input\"\n                />\n                <ul className=\"list-names\">\n                    <li onClick={() => setSelectedList(null)} className={!selectedList ? 'active' : ''}>\n                        Tous les prospects\n                    </li>\n                    {filteredLists.map(list => (\n                        <li\n                            key={list._id}\n                            onClick={() => setSelectedList(list._id)}\n                            className={selectedList === list._id ? 'active' : ''}\n                        >\n                            {list.name}\n                        </li>\n                    ))}\n                </ul>\n                <input\n                    type=\"text\"\n                    placeholder=\"Nom de la nouvelle liste\"\n                    value={newListName}\n                    onChange={(e) => setNewListName(e.target.value)}\n                    className=\"new-list-input\"\n                />\n                <button onClick={createNewList} className=\"btn add-list-btn\">Créer une liste</button>\n            </div>\n\n            {/* Contenu principal pour les prospects */}\n            <div className=\"main-content\">\n                <div className=\"prospect-actions\">\n                    <button onClick={() => setShowImportModal(true)} className=\"btn import-btn\">\n                        Importer des prospects\n                    </button>\n                    <button\n                        onClick={handleDeleteSelected}\n                        className={`btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`}\n                        disabled={loading || selectedProspects.length === 0}\n                    >\n                        Supprimer les prospects sélectionnés\n                    </button>\n                    <button onClick={handleSelectAll} className=\"select-all-btn\">\n                        {displayedProspects.every(prospect => selectedProspects.includes(prospect._id)) ? \"Tout désélectionner\" : \"Sélectionner tout\"}\n                    </button>\n                    <input\n                        type=\"text\"\n                        className=\"search-input\"\n                        placeholder=\"Rechercher...\"\n                        value={searchTerm}                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                </div>\n\n                <div className={`prospect-content ${showImportModal ? 'dimmed' : ''}`}>\n                    {loading ? (\n                        <div className=\"loading\">Chargement...</div>\n                    ) : (\n                        <div className=\"prospect-table-container\">\n                            <table className=\"prospect-table\">\n                                <thead>\n                                <tr>\n                                    <th>Sélection</th>\n                                    <th>Photo</th>\n                                    <th>Nom</th>\n                                    <th>Email</th>\n                                    <th>Société</th>\n                                    <th>LinkedIn</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {displayedProspects.map((prospect) => (\n                                    <tr key={prospect._id}>\n                                        <td>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={selectedProspects.includes(prospect._id)}\n                                                onChange={() => handleSelectProspect(prospect._id)}\n                                            />\n                                        </td>\n                                        <td>\n                                            <img\n                                                src={`https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`}\n                                                alt={`${prospect.prenom} ${prospect.nom}`}\n                                                className=\"prospect-avatar\"\n                                            />\n                                        </td>\n                                        <td>{prospect.prenom} {prospect.nom}</td>\n                                        <td>{prospect.email || 'Non disponible'}</td>\n                                        <td>{prospect.societe || 'Non disponible'}</td>\n                                        <td>\n                                            <a\n                                                href={prospect.linkedin}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                className=\"linkedin-btn\"\n                                            >\n                                                profil\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {showImportModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Importer des prospects</h3>\n                        <CSVReader\n                            onFileLoaded={handleFileUpload}\n                            cssClass=\"csv-reader-input\"\n                            label=\"Importer une liste CSV\"\n                            parserOptions={{ header: false }}\n                        />\n                        <button onClick={() => setShowImportModal(false)} className=\"btn close-btn\">\n                            Fermer\n                        </button>\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProspectListWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}