{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './ProspectListWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 5;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst ProspectListWidget = ({\n  prospects: initialProspects,\n  onProspectsUpdate\n}) => {\n  _s();\n  const [selectedProspects, setSelectedProspects] = useState([]);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [showCreateListModal, setShowCreateListModal] = useState(false);\n  const [showEditListModal, setShowEditListModal] = useState(false);\n  const [showAddToListModal, setShowAddToListModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayedProspects, setDisplayedProspects] = useState([]);\n  const [allProspects, setAllProspects] = useState(initialProspects || []);\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [currentList, setCurrentList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [editListName, setEditListName] = useState('');\n  const [listSearchTerm, setListSearchTerm] = useState('');\n\n  // Debounce search\n  const debouncedSearch = useCallback(debounce(value => {\n    setSearchTerm(value);\n  }, 300), []);\n  const handleError = useCallback((error, message) => {\n    var _error$response, _error$response$data;\n    console.error(message, error);\n    setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || message);\n    setTimeout(() => setError(''), 3000);\n  }, []);\n  const fetchLists = useCallback(async () => {\n    try {\n      const response = await api.get('/lists');\n      if (response.data.success) {\n        setLists(response.data.lists);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des listes de prospects\");\n    }\n  }, [handleError]);\n  const checkForNewProspects = useCallback(async () => {\n    try {\n      const response = await api.get('/prospects');\n      if (response.data.success) {\n        const latestProspects = response.data.prospects;\n\n        // Comparez avec la liste actuelle\n        if (latestProspects.length > allProspects.length) {\n          setAllProspects(latestProspects);\n          onProspectsUpdate(latestProspects);\n          alert(\"De nouveaux prospects ont été ajoutés !\");\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la vérification des nouveaux prospects\");\n    }\n  }, [allProspects, onProspectsUpdate, handleError]);\n  const fetchProspects = useCallback(async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (selectedList) {\n        response = await api.get(`/lists/${selectedList}`);\n        if (response.data.success) {\n          const prospects = response.data.list.prospects;\n          setAllProspects(prospects);\n          onProspectsUpdate(prospects);\n        }\n      } else {\n        response = await api.get('/prospects');\n        if (response.data.success) {\n          setAllProspects(response.data.prospects);\n          onProspectsUpdate(response.data.prospects);\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedList, handleError, onProspectsUpdate]);\n  const filteredProspects = useMemo(() => {\n    if (!searchTerm) return allProspects;\n    const searchTermLower = searchTerm.toLowerCase();\n    return allProspects.filter(prospect => {\n      const searchFields = [prospect.nom, prospect.prenom, prospect.email, prospect.societe].map(field => String(field || '').toLowerCase());\n      return searchFields.some(field => field.includes(searchTermLower));\n    });\n  }, [allProspects, searchTerm]);\n  useEffect(() => {\n    const filtered = filteredProspects.slice(0, ITEMS_PER_PAGE);\n    setDisplayedProspects(filtered);\n  }, [filteredProspects]);\n  const handleFileUpload = async data => {\n    try {\n      setLoading(true);\n      const formattedProspects = data.map(row => ({\n        prenom: row[0] || 'Non disponible',\n        nom: row[1] || 'Non disponible',\n        email: row[2] || 'Non disponible',\n        societe: row[3] || 'Non disponible',\n        linkedin: row[4] || 'Non disponible'\n      }));\n      await Promise.all(formattedProspects.map(prospect => api.post('/prospects/add', prospect)));\n      await fetchProspects();\n      setShowImportModal(false);\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'import des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    try {\n      setLoading(true);\n      await Promise.all(selectedProspects.map(id => api.delete(`/prospects/${id}`)));\n      await fetchProspects();\n      setSelectedProspects([]);\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createNewList = async e => {\n    e.preventDefault();\n    if (newListName.trim() === '') return;\n    try {\n      setLoading(true);\n      const response = await api.post('/lists', {\n        name: newListName\n      });\n      if (response.data.success) {\n        setLists(prev => [...prev, response.data.list]);\n        setNewListName('');\n        setShowCreateListModal(false);\n        setError('');\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la création de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditList = async e => {\n    e.preventDefault();\n    if (!editListName.trim() || !currentList) return;\n    try {\n      setLoading(true);\n      const response = await api.put(`/lists/${currentList._id}`, {\n        name: editListName\n      });\n      if (response.data.success) {\n        setLists(prev => prev.map(list => list._id === currentList._id ? {\n          ...list,\n          name: editListName\n        } : list));\n        setShowEditListModal(false);\n        setEditListName('');\n        setCurrentList(null);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la modification de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteList = async listId => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n    try {\n      setLoading(true);\n      const response = await api.delete(`/lists/${listId}`);\n      if (response.data.success) {\n        setLists(prev => prev.filter(list => list._id !== listId));\n        if (selectedList === listId) {\n          setSelectedList(null);\n          await fetchProspects();\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddProspectsToList = async listId => {\n    try {\n      setLoading(true);\n      const response = await api.post(`/lists/${listId}/prospects`, {\n        prospectIds: selectedProspects\n      });\n      if (response.data.success) {\n        await fetchLists();\n        setShowAddToListModal(false);\n        setSelectedProspects([]);\n        if (selectedList === listId) {\n          await fetchProspects();\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMoreProspects = useCallback(() => {\n    const startIndex = displayedProspects.length;\n    const newProspects = filteredProspects.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n    if (newProspects.length > 0) {\n      setDisplayedProspects(prev => [...prev, ...newProspects]);\n    }\n  }, [displayedProspects.length, filteredProspects]);\n  const handleScroll = useCallback(() => {\n    if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 50) {\n      loadMoreProspects();\n    }\n  }, [loadMoreProspects]);\n  const handleSelectProspect = useCallback(id => {\n    setSelectedProspects(prev => prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]);\n  }, []);\n  const handleSelectAll = useCallback(() => {\n    const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n    setSelectedProspects(prev => prev.length === currentProspectIds.length ? [] : [...new Set([...prev, ...currentProspectIds])]);\n  }, [displayedProspects]);\n  useEffect(() => {\n    fetchLists();\n  }, [fetchLists]);\n  useEffect(() => {\n    fetchProspects();\n  }, [fetchProspects, selectedList]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n  const filteredLists = useMemo(() => lists.filter(list => list.name.toLowerCase().includes(listSearchTerm.toLowerCase())), [lists, listSearchTerm]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkForNewProspects();\n    }, 30000); // Vérifie toutes les 30 secondes\n\n    return () => clearInterval(interval); // Nettoie l'intervalle lorsque le composant est démonté\n  }, [checkForNewProspects]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prospect-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Listes de Prospects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher une liste...\",\n        value: listSearchTerm,\n        onChange: e => setListSearchTerm(e.target.value),\n        className: \"list-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-names\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setSelectedList(null);\n            fetchProspects();\n          },\n          className: `list-item ${!selectedList ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: \"Tous les prospects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", allProspects.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-item ${selectedList === list._id ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            onClick: () => {\n              setSelectedList(list._id);\n              fetchProspects();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", list.prospectsCount || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button edit\",\n              onClick: e => {\n                e.stopPropagation();\n                setCurrentList(list);\n                setEditListName(list.name);\n                setShowEditListModal(true);\n              },\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button delete\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this)]\n        }, list._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateListModal(true),\n        className: \"btn add-list-btn\",\n        children: \"Cr\\xE9er une liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prospect-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(true),\n          className: \"btn import-btn\",\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteSelected,\n          className: `btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`,\n          disabled: loading || selectedProspects.length === 0,\n          children: \"Supprimer les prospects s\\xE9lectionn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), selectedProspects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddToListModal(true),\n          className: \"btn add-to-list-btn\",\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-input\",\n            placeholder: \"Rechercher un prospect...\",\n            onChange: e => debouncedSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(''),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `prospect-content ${showImportModal ? 'dimmed' : ''}`,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prospect-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"prospect-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: displayedProspects.every(prospect => selectedProspects.includes(prospect._id)),\n                    onChange: handleSelectAll\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Soci\\xE9t\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"LinkedIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedProspects.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  className: \"no-results\",\n                  children: \"Aucun prospect trouv\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this) : displayedProspects.map(prospect => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedProspects.includes(prospect._id),\n                    onChange: () => handleSelectProspect(prospect._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`,\n                    alt: `${prospect.prenom} ${prospect.nom}`,\n                    className: \"prospect-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [prospect.prenom, \" \", prospect.nom]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.email || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.societe || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: prospect.linkedin,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"linkedin-btn\",\n                    children: \"profil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 45\n                }, this)]\n              }, prospect._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this), showCreateListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cr\\xE9er une nouvelle liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createNewList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: newListName,\n              onChange: e => setNewListName(e.target.value),\n              className: \"new-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !newListName.trim() || loading,\n              children: loading ? 'Création...' : 'Créer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowCreateListModal(false);\n                setNewListName('');\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }, this), showEditListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier la liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: editListName,\n              onChange: e => setEditListName(e.target.value),\n              className: \"edit-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !editListName.trim() || loading,\n              children: loading ? 'Modification...' : 'Modifier'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 17\n    }, this), showAddToListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lists-selection\",\n            children: filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddProspectsToList(list._id),\n              className: \"list-selection-btn\",\n              disabled: loading,\n              children: list.name\n            }, list._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddToListModal(false),\n            className: \"btn cancel-btn\",\n            disabled: loading,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          onFileLoaded: handleFileUpload,\n          cssClass: \"csv-reader-input\",\n          label: \"Importer une liste CSV\",\n          parserOptions: {\n            header: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowImportModal(false),\n            className: \"btn cancel-btn\",\n            disabled: loading,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 9\n  }, this);\n};\n_s(ProspectListWidget, \"56GP9p1h5RHBG8sY6EkkV1xHYjs=\");\n_c = ProspectListWidget;\nexport default ProspectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ProspectListWidget\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","CSVReader","axios","debounce","jsxDEV","_jsxDEV","API_BASE_URL","ITEMS_PER_PAGE","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","ProspectListWidget","prospects","initialProspects","onProspectsUpdate","_s","selectedProspects","setSelectedProspects","showImportModal","setShowImportModal","showCreateListModal","setShowCreateListModal","showEditListModal","setShowEditListModal","showAddToListModal","setShowAddToListModal","searchTerm","setSearchTerm","error","setError","loading","setLoading","displayedProspects","setDisplayedProspects","allProspects","setAllProspects","lists","setLists","selectedList","setSelectedList","currentList","setCurrentList","newListName","setNewListName","editListName","setEditListName","listSearchTerm","setListSearchTerm","debouncedSearch","value","handleError","message","_error$response","_error$response$data","console","response","data","setTimeout","fetchLists","get","success","checkForNewProspects","latestProspects","length","alert","fetchProspects","list","filteredProspects","searchTermLower","toLowerCase","filter","prospect","searchFields","nom","prenom","email","societe","map","field","String","some","includes","filtered","slice","handleFileUpload","formattedProspects","row","linkedin","Promise","all","post","handleDeleteSelected","id","delete","createNewList","e","preventDefault","trim","name","prev","handleEditList","put","_id","handleDeleteList","listId","window","confirm","handleAddProspectsToList","prospectIds","loadMoreProspects","startIndex","newProspects","handleScroll","innerHeight","scrollY","document","documentElement","scrollHeight","handleSelectProspect","prospectId","handleSelectAll","currentProspectIds","Set","addEventListener","removeEventListener","filteredLists","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","onClick","prospectsCount","stopPropagation","disabled","checked","every","colSpan","src","alt","href","rel","onSubmit","autoFocus","onFileLoaded","cssClass","label","parserOptions","header","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './ProspectListWidget.css';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 5;\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nconst ProspectListWidget = ({ prospects: initialProspects, onProspectsUpdate }) => {\n    const [selectedProspects, setSelectedProspects] = useState([]);\n    const [showImportModal, setShowImportModal] = useState(false);\n    const [showCreateListModal, setShowCreateListModal] = useState(false);\n    const [showEditListModal, setShowEditListModal] = useState(false);\n    const [showAddToListModal, setShowAddToListModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [displayedProspects, setDisplayedProspects] = useState([]);\n    const [allProspects, setAllProspects] = useState(initialProspects || []);\n    const [lists, setLists] = useState([]);\n    const [selectedList, setSelectedList] = useState(null);\n    const [currentList, setCurrentList] = useState(null);\n    const [newListName, setNewListName] = useState('');\n    const [editListName, setEditListName] = useState('');\n    const [listSearchTerm, setListSearchTerm] = useState('');\n\n    // Debounce search\n    const debouncedSearch = useCallback(\n        debounce((value) => {\n            setSearchTerm(value);\n        }, 300),\n        []\n    );\n\n    const handleError = useCallback((error, message) => {\n        console.error(message, error);\n        setError(error.response?.data?.message || message);\n        setTimeout(() => setError(''), 3000);\n    }, []);\n\n    const fetchLists = useCallback(async () => {\n        try {\n            const response = await api.get('/lists');\n            if (response.data.success) {\n                setLists(response.data.lists);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des listes de prospects\");\n        }\n    }, [handleError]);\n\n    const checkForNewProspects = useCallback(async () => {\n        try {\n            const response = await api.get('/prospects');\n            if (response.data.success) {\n                const latestProspects = response.data.prospects;\n\n                // Comparez avec la liste actuelle\n                if (latestProspects.length > allProspects.length) {\n                    setAllProspects(latestProspects);\n                    onProspectsUpdate(latestProspects);\n                    alert(\"De nouveaux prospects ont été ajoutés !\");\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la vérification des nouveaux prospects\");\n        }\n    }, [allProspects, onProspectsUpdate, handleError]);\n\n    const fetchProspects = useCallback(async () => {\n        try {\n            setLoading(true);\n            let response;\n\n            if (selectedList) {\n                response = await api.get(`/lists/${selectedList}`);\n                if (response.data.success) {\n                    const prospects = response.data.list.prospects;\n                    setAllProspects(prospects);\n                    onProspectsUpdate(prospects);\n                }\n            } else {\n                response = await api.get('/prospects');\n                if (response.data.success) {\n                    setAllProspects(response.data.prospects);\n                    onProspectsUpdate(response.data.prospects);\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    }, [selectedList, handleError, onProspectsUpdate]);\n\n    const filteredProspects = useMemo(() => {\n        if (!searchTerm) return allProspects;\n\n        const searchTermLower = searchTerm.toLowerCase();\n        return allProspects.filter(prospect => {\n            const searchFields = [\n                prospect.nom,\n                prospect.prenom,\n                prospect.email,\n                prospect.societe\n            ].map(field => String(field || '').toLowerCase());\n\n            return searchFields.some(field => field.includes(searchTermLower));\n        });\n    }, [allProspects, searchTerm]);\n\n    useEffect(() => {\n        const filtered = filteredProspects.slice(0, ITEMS_PER_PAGE);\n        setDisplayedProspects(filtered);\n    }, [filteredProspects]);\n\n    const handleFileUpload = async (data) => {\n        try {\n            setLoading(true);\n            const formattedProspects = data.map(row => ({\n                prenom: row[0] || 'Non disponible',\n                nom: row[1] || 'Non disponible',\n                email: row[2] || 'Non disponible',\n                societe: row[3] || 'Non disponible',\n                linkedin: row[4] || 'Non disponible'\n            }));\n\n            await Promise.all(\n                formattedProspects.map(prospect =>\n                    api.post('/prospects/add', prospect)\n                )\n            );\n\n            await fetchProspects();\n            setShowImportModal(false);\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'import des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteSelected = async () => {\n        try {\n            setLoading(true);\n            await Promise.all(\n                selectedProspects.map(id =>\n                    api.delete(`/prospects/${id}`)\n                )\n            );\n\n            await fetchProspects();\n            setSelectedProspects([]);\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const createNewList = async (e) => {\n        e.preventDefault();\n        if (newListName.trim() === '') return;\n\n        try {\n            setLoading(true);\n            const response = await api.post('/lists', { name: newListName });\n            if (response.data.success) {\n                setLists(prev => [...prev, response.data.list]);\n                setNewListName('');\n                setShowCreateListModal(false);\n                setError('');\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la création de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleEditList = async (e) => {\n        e.preventDefault();\n        if (!editListName.trim() || !currentList) return;\n\n        try {\n            setLoading(true);\n            const response = await api.put(`/lists/${currentList._id}`, {\n                name: editListName\n            });\n\n            if (response.data.success) {\n                setLists(prev => prev.map(list =>\n                    list._id === currentList._id\n                        ? { ...list, name: editListName }\n                        : list\n                ));\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la modification de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };const handleDeleteList = async (listId) => {\n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n\n        try {\n            setLoading(true);\n            const response = await api.delete(`/lists/${listId}`);\n\n            if (response.data.success) {\n                setLists(prev => prev.filter(list => list._id !== listId));\n                if (selectedList === listId) {\n                    setSelectedList(null);\n                    await fetchProspects();\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleAddProspectsToList = async (listId) => {\n        try {\n            setLoading(true);\n            const response = await api.post(`/lists/${listId}/prospects`, {\n                prospectIds: selectedProspects\n            });\n\n            if (response.data.success) {\n                await fetchLists();\n                setShowAddToListModal(false);\n                setSelectedProspects([]);\n                if (selectedList === listId) {\n                    await fetchProspects();\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const loadMoreProspects = useCallback(() => {\n        const startIndex = displayedProspects.length;\n        const newProspects = filteredProspects.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n        if (newProspects.length > 0) {\n            setDisplayedProspects(prev => [...prev, ...newProspects]);\n        }\n    }, [displayedProspects.length, filteredProspects]);\n\n    const handleScroll = useCallback(() => {\n        if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 50) {\n            loadMoreProspects();\n        }\n    }, [loadMoreProspects]);\n\n    const handleSelectProspect = useCallback((id) => {\n        setSelectedProspects(prev =>\n            prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]\n        );\n    }, []);\n\n    const handleSelectAll = useCallback(() => {\n        const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n        setSelectedProspects(prev =>\n            prev.length === currentProspectIds.length ? [] : [...new Set([...prev, ...currentProspectIds])]\n        );\n    }, [displayedProspects]);\n\n    useEffect(() => {\n        fetchLists();\n    }, [fetchLists]);\n\n    useEffect(() => {\n        fetchProspects();\n    }, [fetchProspects, selectedList]);\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [handleScroll]);\n\n    const filteredLists = useMemo(() =>\n            lists.filter(list =>\n                list.name.toLowerCase().includes(listSearchTerm.toLowerCase())\n            ),\n        [lists, listSearchTerm]);\n    useEffect(() => {\n        const interval = setInterval(() => {\n            checkForNewProspects();\n        }, 30000); // Vérifie toutes les 30 secondes\n\n        return () => clearInterval(interval); // Nettoie l'intervalle lorsque le composant est démonté\n    }, [checkForNewProspects]);\n\n    return (\n        <div className=\"prospect-list-widget\">\n            <div className=\"list-sidebar\">\n                <h3>Listes de Prospects</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Rechercher une liste...\"\n                    value={listSearchTerm}\n                    onChange={(e) => setListSearchTerm(e.target.value)}\n                    className=\"list-search-input\"\n                />\n                <ul className=\"list-names\">\n                    <li\n                        onClick={() => {\n                            setSelectedList(null);\n                            fetchProspects();\n                        }}\n                        className={`list-item ${!selectedList ? 'active' : ''}`}\n                    >\n                        <div className=\"list-item-content\">\n                            <span className=\"list-name\">Tous les prospects</span>\n                            <span className=\"list-count\">({allProspects.length})</span>\n                        </div>\n                    </li>\n                    {filteredLists.map(list => (\n                        <li\n                            key={list._id}\n                            className={`list-item ${selectedList === list._id ? 'active' : ''}`}\n                        >\n                            <div\n                                className=\"list-item-content\"\n                                onClick={() => {\n                                    setSelectedList(list._id);\n                                    fetchProspects();\n                                }}\n                            >\n                                <span className=\"list-name\">{list.name}</span>\n                                <span className=\"list-count\">\n                                    ({list.prospectsCount || 0})\n                                </span>\n                            </div>\n                            <div className=\"list-actions\">\n                                <button\n                                    className=\"icon-button edit\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        setCurrentList(list);\n                                        setEditListName(list.name);\n                                        setShowEditListModal(true);\n                                    }}\n                                >\n                                    ✏️\n                                </button>\n                                <button\n                                    className=\"icon-button delete\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleDeleteList(list._id);\n                                    }}\n                                >\n                                    🗑️\n                                </button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                <button\n                    onClick={() => setShowCreateListModal(true)}\n                    className=\"btn add-list-btn\"\n                >\n                    Créer une liste\n                </button>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"prospect-actions\">\n                    <button onClick={() => setShowImportModal(true)} className=\"btn import-btn\">\n                        Importer des prospects\n                    </button>\n                    <button\n                        onClick={handleDeleteSelected}\n                        className={`btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`}\n                        disabled={loading || selectedProspects.length === 0}\n                    >\n                        Supprimer les prospects sélectionnés\n                    </button>\n                    {selectedProspects.length > 0 && (\n                        <button\n                            onClick={() => setShowAddToListModal(true)}\n                            className=\"btn add-to-list-btn\"\n                        >\n                            Ajouter à une liste\n                        </button>\n                    )}\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            className=\"search-input\"\n                            placeholder=\"Rechercher un prospect...\"\n                            onChange={(e) => debouncedSearch(e.target.value)}\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"clear-search\"\n                                onClick={() => setSearchTerm('')}\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                </div>\n\n                <div className={`prospect-content ${showImportModal ? 'dimmed' : ''}`}>\n                    {loading ? (\n                        <div className=\"loading\">Chargement...</div>\n                    ) : (\n                        <div className=\"prospect-table-container\">\n                            <table className=\"prospect-table\">\n                                <thead>\n                                <tr>\n                                    <th>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={displayedProspects.every(prospect =>\n                                                selectedProspects.includes(prospect._id)\n                                            )}\n                                            onChange={handleSelectAll}\n                                        />\n                                    </th>\n                                    <th>Photo</th>\n                                    <th>Nom</th>\n                                    <th>Email</th>\n                                    <th>Société</th>\n                                    <th>LinkedIn</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {displayedProspects.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"6\" className=\"no-results\">\n                                            Aucun prospect trouvé\n                                        </td>\n                                    </tr>\n                                ) : (\n                                    displayedProspects.map((prospect) => (\n                                        <tr key={prospect._id}>\n                                            <td>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={selectedProspects.includes(prospect._id)}\n                                                    onChange={() => handleSelectProspect(prospect._id)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <img\n                                                    src={`https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`}\n                                                    alt={`${prospect.prenom} ${prospect.nom}`}\n                                                    className=\"prospect-avatar\"\n                                                />\n                                            </td>\n                                            <td>{prospect.prenom} {prospect.nom}</td>\n                                            <td>{prospect.email || 'Non disponible'}</td>\n                                            <td>{prospect.societe || 'Non disponible'}</td>\n                                            <td>\n                                                <a\n                                                    href={prospect.linkedin}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"linkedin-btn\"\n                                                >\n                                                    profil\n                                                </a>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {showCreateListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Créer une nouvelle liste</h3>\n                        <form onSubmit={createNewList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={newListName}\n                                    onChange={(e) => setNewListName(e.target.value)}\n                                    className=\"new-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!newListName.trim() || loading}\n                                >\n                                    {loading ? 'Création...' : 'Créer'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowCreateListModal(false);\n                                        setNewListName('');\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {showEditListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Modifier la liste</h3>\n                        <form onSubmit={handleEditList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={editListName}\n                                    onChange={(e) => setEditListName(e.target.value)}\n                                    className=\"edit-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!editListName.trim() || loading}\n                                >\n                                    {loading ? 'Modification...' : 'Modifier'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowEditListModal(false);\n                                        setEditListName('');\n                                        setCurrentList(null);\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {showAddToListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Ajouter à une liste</h3>\n                        <div className=\"modal-body\">\n                            <div className=\"lists-selection\">\n                                {filteredLists.map(list => (\n                                    <button\n                                        key={list._id}\n                                        onClick={() => handleAddProspectsToList(list._id)}\n                                        className=\"list-selection-btn\"\n                                        disabled={loading}\n                                    >\n                                        {list.name}\n                                    </button>\n                                ))}\n                            </div>\n                            {error && <p className=\"error-message\">{error}</p>}\n                        </div>\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowAddToListModal(false)}\n                                className=\"btn cancel-btn\"\n                                disabled={loading}\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {showImportModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Importer des prospects</h3>\n                        <CSVReader\n                            onFileLoaded={handleFileUpload}\n                            cssClass=\"csv-reader-input\"\n                            label=\"Importer une liste CSV\"\n                            parserOptions={{ header: false }}\n                        />\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowImportModal(false)}\n                                className=\"btn cancel-btn\"\n                                disabled={loading}\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProspectListWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}