{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/NotificationCenter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Bell, Check, Trash2, X } from 'lucide-react';\nimport './NotificationCenter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n\n  // Fonction pour récupérer les notifications\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5001/api/notifications', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n        setUnreadCount(response.data.unreadCount);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effet pour fermer le menu lors d'un clic à l'extérieur\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Récupérer les notifications au chargement\n  useEffect(() => {\n    fetchNotifications();\n    // Mettre à jour les notifications toutes les minutes\n    const interval = setInterval(fetchNotifications, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Marquer une notification comme lue\n  const markAsRead = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:5001/api/notifications/${id}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications();\n    } catch (error) {\n      console.error('Erreur lors du marquage de la notification:', error);\n    }\n  };\n\n  // Marquer toutes les notifications comme lues\n  const markAllAsRead = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:5001/api/notifications/read-all', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications();\n    } catch (error) {\n      console.error('Erreur lors du marquage des notifications:', error);\n    }\n  };\n\n  // Supprimer une notification\n  const deleteNotification = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`http://localhost:5001/api/notifications/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications();\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la notification:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-button\",\n      children: [/*#__PURE__*/_jsxDEV(Bell, {\n        className: \"notification-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notifications-title\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          children: \"Tout marquer comme lu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-empty\",\n        children: \"Aucune notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-title\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-message\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-time\",\n              children: notification.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this)\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationCenter, \"sJBeGee6z3BHTFDJ+Y4dhUZcqv4=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Bell","Check","Trash2","X","jsxDEV","_jsxDEV","NotificationCenter","_s","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","dropdownRef","loading","setLoading","fetchNotifications","token","localStorage","getItem","response","get","headers","Authorization","data","success","error","console","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","interval","setInterval","clearInterval","markAsRead","id","put","markAllAsRead","deleteNotification","delete","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","read","title","message","time","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/NotificationCenter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Bell, Check, Trash2, X } from 'lucide-react';\nimport './NotificationCenter.css'\n\nconst NotificationCenter = () => {\n    const [notifications, setNotifications] = useState([]);\n    const [unreadCount, setUnreadCount] = useState(0);\n    const [isOpen, setIsOpen] = useState(false);\n    const dropdownRef = useRef(null);\n    const [loading, setLoading] = useState(false);\n\n    // Fonction pour récupérer les notifications\n    const fetchNotifications = async () => {\n        try {\n            setLoading(true);\n            const token = localStorage.getItem('token');\n            const response = await axios.get('http://localhost:5001/api/notifications', {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            if (response.data.success) {\n                setNotifications(response.data.notifications);\n                setUnreadCount(response.data.unreadCount);\n            }\n        } catch (error) {\n            console.error('Erreur lors de la récupération des notifications:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Effet pour fermer le menu lors d'un clic à l'extérieur\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    // Récupérer les notifications au chargement\n    useEffect(() => {\n        fetchNotifications();\n        // Mettre à jour les notifications toutes les minutes\n        const interval = setInterval(fetchNotifications, 60000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // Marquer une notification comme lue\n    const markAsRead = async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.put(`http://localhost:5001/api/notifications/${id}/read`, {}, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications();\n        } catch (error) {\n            console.error('Erreur lors du marquage de la notification:', error);\n        }\n    };\n\n    // Marquer toutes les notifications comme lues\n    const markAllAsRead = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.put('http://localhost:5001/api/notifications/read-all', {}, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications();\n        } catch (error) {\n            console.error('Erreur lors du marquage des notifications:', error);\n        }\n    };\n\n    // Supprimer une notification\n    const deleteNotification = async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.delete(`http://localhost:5001/api/notifications/${id}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications();\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la notification:', error);\n        }\n    };\n\n    return (\n        <div className=\"relative\" ref={dropdownRef}>\n            {/* Icône de notification avec compteur */}\n            <button className=\"notification-button\">\n                <Bell className=\"notification-icon\" />\n                {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\n            </button>\n\n            {isOpen && (\n                <div className=\"notifications-container\">\n                    <div className=\"notifications-header\">\n                        <span className=\"notifications-title\">Notifications</span>\n                        <button className=\"mark-all-read\">Tout marquer comme lu</button>\n                    </div>\n\n                    {notifications.length === 0 ? (\n                        <div className=\"notifications-empty\">\n                            Aucune notification\n                        </div>\n                    ) : (\n                        <div className=\"notifications-list\">\n                            {notifications.map(notification => (\n                                <div key={notification.id} className={`notification-item ${!notification.read ? 'unread' : ''}`}>\n                                    <div className=\"notification-content\">\n                                        <div className=\"notification-title\">{notification.title}</div>\n                                        <div className=\"notification-message\">{notification.message}</div>\n                                        <div className=\"notification-time\">{notification.time}</div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NotificationCenter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,CAAC,QAAQ,cAAc;AACrD,OAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMkB,WAAW,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMqB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACAD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,yCAAyC,EAAE;QACxEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;QACvBjB,gBAAgB,CAACY,QAAQ,CAACI,IAAI,CAACjB,aAAa,CAAC;QAC7CG,cAAc,CAACU,QAAQ,CAACI,IAAI,CAACf,WAAW,CAAC;MAC7C;IACJ,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;IAC7E,CAAC,SAAS;MACNX,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACZ,MAAMgC,kBAAkB,GAAIC,KAAK,IAAK;MAClC,IAAIhB,WAAW,CAACiB,OAAO,IAAI,CAACjB,WAAW,CAACiB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACpEpB,SAAS,CAAC,KAAK,CAAC;MACpB;IACJ,CAAC;IAEDqB,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhC,SAAS,CAAC,MAAM;IACZoB,kBAAkB,CAAC,CAAC;IACpB;IACA,MAAMoB,QAAQ,GAAGC,WAAW,CAACrB,kBAAkB,EAAE,KAAK,CAAC;IACvD,OAAO,MAAMsB,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACA,MAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMrB,KAAK,CAAC2C,GAAG,CAAC,2CAA2CD,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;QACtElB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MACFD,kBAAkB,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACvE;EACJ,CAAC;;EAED;EACA,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMzB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMrB,KAAK,CAAC2C,GAAG,CAAC,kDAAkD,EAAE,CAAC,CAAC,EAAE;QACpEnB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MACFD,kBAAkB,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IACtE;EACJ,CAAC;;EAED;EACA,MAAMiB,kBAAkB,GAAG,MAAOH,EAAE,IAAK;IACrC,IAAI;MACA,MAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMrB,KAAK,CAAC8C,MAAM,CAAC,2CAA2CJ,EAAE,EAAE,EAAE;QAChElB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAChD,CAAC,CAAC;MACFD,kBAAkB,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;IAC7E;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKyC,SAAS,EAAC,UAAU;IAACC,GAAG,EAAEjC,WAAY;IAAAkC,QAAA,gBAEvC3C,OAAA;MAAQyC,SAAS,EAAC,qBAAqB;MAAAE,QAAA,gBACnC3C,OAAA,CAACL,IAAI;QAAC8C,SAAS,EAAC;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrC1C,WAAW,GAAG,CAAC,iBAAIL,OAAA;QAAMyC,SAAS,EAAC,oBAAoB;QAAAE,QAAA,EAAEtC;MAAW;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,EAERxC,MAAM,iBACHP,OAAA;MAAKyC,SAAS,EAAC,yBAAyB;MAAAE,QAAA,gBACpC3C,OAAA;QAAKyC,SAAS,EAAC,sBAAsB;QAAAE,QAAA,gBACjC3C,OAAA;UAAMyC,SAAS,EAAC,qBAAqB;UAAAE,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1D/C,OAAA;UAAQyC,SAAS,EAAC,eAAe;UAAAE,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,EAEL5C,aAAa,CAAC6C,MAAM,KAAK,CAAC,gBACvBhD,OAAA;QAAKyC,SAAS,EAAC,qBAAqB;QAAAE,QAAA,EAAC;MAErC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEN/C,OAAA;QAAKyC,SAAS,EAAC,oBAAoB;QAAAE,QAAA,EAC9BxC,aAAa,CAAC8C,GAAG,CAACC,YAAY,iBAC3BlD,OAAA;UAA2ByC,SAAS,EAAE,qBAAqB,CAACS,YAAY,CAACC,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAAR,QAAA,eAC5F3C,OAAA;YAAKyC,SAAS,EAAC,sBAAsB;YAAAE,QAAA,gBACjC3C,OAAA;cAAKyC,SAAS,EAAC,oBAAoB;cAAAE,QAAA,EAAEO,YAAY,CAACE;YAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9D/C,OAAA;cAAKyC,SAAS,EAAC,sBAAsB;cAAAE,QAAA,EAAEO,YAAY,CAACG;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClE/C,OAAA;cAAKyC,SAAS,EAAC,mBAAmB;cAAAE,QAAA,EAAEO,YAAY,CAACI;YAAI;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D;QAAC,GALAG,YAAY,CAACd,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMpB,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7C,EAAA,CA1HID,kBAAkB;AAAAsD,EAAA,GAAlBtD,kBAAkB;AA4HxB,eAAeA,kBAAkB;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}