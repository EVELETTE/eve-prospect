{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/NotificationCenter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { Bell, Check, Trash2 } from 'lucide-react';\nimport './NotificationCenter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\n  const dropdownRef = useRef(null);\n  const pollInterval = useRef(null);\n\n  // Fonction pour récupérer les notifications avec gestion des erreurs\n  const fetchNotifications = useCallback(async (showLoading = false) => {\n    try {\n      if (showLoading) setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5001/api/notifications', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        },\n        params: {\n          timestamp: Date.now() // Évite la mise en cache\n        }\n      });\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n        setUnreadCount(response.data.unreadCount);\n        setLastUpdate(Date.now());\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des notifications:', error);\n    } finally {\n      if (showLoading) setLoading(false);\n    }\n  }, []);\n\n  // Initialisation du polling et nettoyage\n  useEffect(() => {\n    // Première récupération\n    fetchNotifications(true);\n\n    // Mise en place du polling toutes les 10 secondes\n    pollInterval.current = setInterval(() => {\n      fetchNotifications(false);\n    }, 10000);\n\n    // Nettoyage lors du démontage\n    return () => {\n      if (pollInterval.current) {\n        clearInterval(pollInterval.current);\n      }\n    };\n  }, [fetchNotifications]);\n\n  // Mise à jour lors de la visibilité de la page\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        fetchNotifications(false);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [fetchNotifications]);\n\n  // Effet pour fermer le menu lors d'un clic à l'extérieur\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Marquer une notification comme lue\n  const markAsRead = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:5001/api/notifications/${id}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications(false);\n    } catch (error) {\n      console.error('Erreur lors du marquage de la notification:', error);\n    }\n  };\n\n  // Marquer toutes les notifications comme lues\n  const markAllAsRead = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:5001/api/notifications/read-all', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications(false);\n    } catch (error) {\n      console.error('Erreur lors du marquage des notifications:', error);\n    }\n  };\n\n  // Supprimer une notification\n  const deleteNotification = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`http://localhost:5001/api/notifications/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications(false);\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la notification:', error);\n    }\n  };\n\n  // Format de la date\n  const formatDate = dateString => {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInMinutes < 1) return 'À l\\'instant';\n    if (diffInMinutes < 60) return `Il y a ${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''}`;\n    if (diffInHours < 24) return `Il y a ${diffInHours} heure${diffInHours > 1 ? 's' : ''}`;\n    if (diffInDays < 7) return `Il y a ${diffInDays} jour${diffInDays > 1 ? 's' : ''}`;\n    return date.toLocaleString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-wrapper\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-button\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Notifications\",\n      title: `Dernière mise à jour: ${new Date(lastUpdate).toLocaleTimeString()}`,\n      children: [/*#__PURE__*/_jsxDEV(Bell, {\n        className: \"notification-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-title\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: markAllAsRead,\n          children: \"Tout marquer comme lu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-empty\",\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-empty\",\n        children: \"Aucune notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-title\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-message\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-time\",\n              children: formatDate(notification.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-actions\",\n            children: [!notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                markAsRead(notification._id);\n              },\n              className: \"notification-action-btn\",\n              title: \"Marquer comme lu\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                deleteNotification(notification._id);\n              },\n              className: \"notification-action-btn\",\n              title: \"Supprimer\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 37\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationCenter, \"upRWgpmL7x6NRxEh0phlYpnDPko=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","Bell","Check","Trash2","jsxDEV","_jsxDEV","NotificationCenter","_s","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","loading","setLoading","lastUpdate","setLastUpdate","Date","now","dropdownRef","pollInterval","fetchNotifications","showLoading","token","localStorage","getItem","response","get","headers","Authorization","params","timestamp","data","success","error","console","current","setInterval","clearInterval","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","handleClickOutside","event","contains","target","markAsRead","id","put","markAllAsRead","deleteNotification","delete","formatDate","dateString","date","diffInMinutes","Math","floor","diffInHours","diffInDays","toLocaleString","day","month","year","hour","minute","className","ref","children","onClick","title","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","read","message","createdAt","e","stopPropagation","_id","size","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/NotificationCenter.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { Bell, Check, Trash2 } from 'lucide-react';\nimport './NotificationCenter.css';\n\nconst NotificationCenter = () => {\n    const [notifications, setNotifications] = useState([]);\n    const [unreadCount, setUnreadCount] = useState(0);\n    const [isOpen, setIsOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [lastUpdate, setLastUpdate] = useState(Date.now());\n    const dropdownRef = useRef(null);\n    const pollInterval = useRef(null);\n\n    // Fonction pour récupérer les notifications avec gestion des erreurs\n    const fetchNotifications = useCallback(async (showLoading = false) => {\n        try {\n            if (showLoading) setLoading(true);\n            const token = localStorage.getItem('token');\n            const response = await axios.get('http://localhost:5001/api/notifications', {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Cache-Control': 'no-cache',\n                    'Pragma': 'no-cache'\n                },\n                params: {\n                    timestamp: Date.now() // Évite la mise en cache\n                }\n            });\n\n            if (response.data.success) {\n                setNotifications(response.data.notifications);\n                setUnreadCount(response.data.unreadCount);\n                setLastUpdate(Date.now());\n            }\n        } catch (error) {\n            console.error('Erreur lors de la récupération des notifications:', error);\n        } finally {\n            if (showLoading) setLoading(false);\n        }\n    }, []);\n\n    // Initialisation du polling et nettoyage\n    useEffect(() => {\n        // Première récupération\n        fetchNotifications(true);\n\n        // Mise en place du polling toutes les 10 secondes\n        pollInterval.current = setInterval(() => {\n            fetchNotifications(false);\n        }, 10000);\n\n        // Nettoyage lors du démontage\n        return () => {\n            if (pollInterval.current) {\n                clearInterval(pollInterval.current);\n            }\n        };\n    }, [fetchNotifications]);\n\n    // Mise à jour lors de la visibilité de la page\n    useEffect(() => {\n        const handleVisibilityChange = () => {\n            if (document.visibilityState === 'visible') {\n                fetchNotifications(false);\n            }\n        };\n\n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        return () => {\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\n        };\n    }, [fetchNotifications]);\n\n    // Effet pour fermer le menu lors d'un clic à l'extérieur\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    // Marquer une notification comme lue\n    const markAsRead = async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.put(`http://localhost:5001/api/notifications/${id}/read`, {}, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications(false);\n        } catch (error) {\n            console.error('Erreur lors du marquage de la notification:', error);\n        }\n    };\n\n    // Marquer toutes les notifications comme lues\n    const markAllAsRead = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.put('http://localhost:5001/api/notifications/read-all', {}, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications(false);\n        } catch (error) {\n            console.error('Erreur lors du marquage des notifications:', error);\n        }\n    };\n\n    // Supprimer une notification\n    const deleteNotification = async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.delete(`http://localhost:5001/api/notifications/${id}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications(false);\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la notification:', error);\n        }\n    };\n\n    // Format de la date\n    const formatDate = (dateString) => {\n        const now = new Date();\n        const date = new Date(dateString);\n        const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n        const diffInHours = Math.floor(diffInMinutes / 60);\n        const diffInDays = Math.floor(diffInHours / 24);\n\n        if (diffInMinutes < 1) return 'À l\\'instant';\n        if (diffInMinutes < 60) return `Il y a ${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''}`;\n        if (diffInHours < 24) return `Il y a ${diffInHours} heure${diffInHours > 1 ? 's' : ''}`;\n        if (diffInDays < 7) return `Il y a ${diffInDays} jour${diffInDays > 1 ? 's' : ''}`;\n\n        return date.toLocaleString('fr-FR', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    return (\n        <div className=\"notifications-wrapper\" ref={dropdownRef}>\n            <button\n                className=\"notification-button\"\n                onClick={() => setIsOpen(!isOpen)}\n                aria-label=\"Notifications\"\n                title={`Dernière mise à jour: ${new Date(lastUpdate).toLocaleTimeString()}`}\n            >\n                <Bell className=\"notification-icon\" />\n                {unreadCount > 0 && (\n                    <div className=\"notification-badge\">\n                        {unreadCount}\n                    </div>\n                )}\n            </button>\n\n            {isOpen && (\n                <div className=\"notifications-container\">\n                    <div className=\"notifications-header\">\n                        <div className=\"notifications-title\">Notifications</div>\n                        {unreadCount > 0 && (\n                            <button\n                                className=\"mark-all-read\"\n                                onClick={markAllAsRead}\n                            >\n                                Tout marquer comme lu\n                            </button>\n                        )}\n                    </div>\n\n                    {loading ? (\n                        <div className=\"notifications-empty\">\n                            Chargement...\n                        </div>\n                    ) : notifications.length === 0 ? (\n                        <div className=\"notifications-empty\">\n                            Aucune notification\n                        </div>\n                    ) : (\n                        <div className=\"notifications-list\">\n                            {notifications.map(notification => (\n                                <div\n                                    key={notification._id}\n                                    className={`notification-item ${!notification.read ? 'unread' : ''}`}\n                                >\n                                    <div className=\"notification-content\">\n                                        <div className=\"notification-title\">\n                                            {notification.title}\n                                        </div>\n                                        <div className=\"notification-message\">\n                                            {notification.message}\n                                        </div>\n                                        <div className=\"notification-time\">\n                                            {formatDate(notification.createdAt)}\n                                        </div>\n                                    </div>\n                                    <div className=\"notification-actions\">\n                                        {!notification.read && (\n                                            <button\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    markAsRead(notification._id);\n                                                }}\n                                                className=\"notification-action-btn\"\n                                                title=\"Marquer comme lu\"\n                                            >\n                                                <Check size={16} />\n                                            </button>\n                                        )}\n                                        <button\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                                deleteNotification(notification._id);\n                                            }}\n                                            className=\"notification-action-btn\"\n                                            title=\"Supprimer\"\n                                        >\n                                            <Trash2 size={16} />\n                                        </button>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NotificationCenter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}