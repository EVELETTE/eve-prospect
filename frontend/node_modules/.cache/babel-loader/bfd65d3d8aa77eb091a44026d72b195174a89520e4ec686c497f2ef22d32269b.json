{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './ProspectListWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 5;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst ProspectListWidget = ({\n  prospects,\n  onProspectsUpdate\n}) => {\n  _s();\n  const [selectedProspects, setSelectedProspects] = useState([]);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [showCreateListModal, setShowCreateListModal] = useState(false);\n  const [showEditListModal, setShowEditListModal] = useState(false);\n  const [showAddToListModal, setShowAddToListModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayedProspects, setDisplayedProspects] = useState([]);\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [currentList, setCurrentList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [editListName, setEditListName] = useState('');\n  const [listSearchTerm, setListSearchTerm] = useState('');\n  const debouncedSearch = useCallback(debounce(value => {\n    setSearchTerm(value);\n  }, 300), []);\n  const filteredProspects = useMemo(() => {\n    if (!searchTerm) return prospects;\n    const searchTermLower = searchTerm.toLowerCase();\n    return prospects.filter(prospect => {\n      const searchFields = [prospect.nom, prospect.prenom, prospect.email, prospect.societe].map(field => String(field || '').toLowerCase());\n      return searchFields.some(field => field.includes(searchTermLower));\n    });\n  }, [prospects, searchTerm]);\n  const handleError = useCallback((error, message) => {\n    var _error$response, _error$response$data;\n    console.error(message, error);\n    setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || message);\n    setTimeout(() => setError(''), 3000);\n  }, []);\n  const fetchLists = useCallback(async () => {\n    try {\n      const response = await api.get('/lists');\n      setLists(response.data.lists);\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des listes de prospects\");\n    }\n  }, [handleError]);\n  const fetchProspects = useCallback(async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (selectedList) {\n        // Charger les prospects de la liste sélectionnée\n        response = await api.get(`/lists/${selectedList}`);\n        if (response.data.success) {\n          const prospectsData = response.data.list.prospects || [];\n          onProspectsUpdate(prospectsData);\n          const filteredResults = prospectsData.filter(prospect => {\n            var _prospect$nom, _prospect$prenom, _prospect$email, _prospect$societe;\n            return ((_prospect$nom = prospect.nom) === null || _prospect$nom === void 0 ? void 0 : _prospect$nom.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$prenom = prospect.prenom) === null || _prospect$prenom === void 0 ? void 0 : _prospect$prenom.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$email = prospect.email) === null || _prospect$email === void 0 ? void 0 : _prospect$email.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$societe = prospect.societe) === null || _prospect$societe === void 0 ? void 0 : _prospect$societe.toLowerCase().includes(searchTerm.toLowerCase()));\n          });\n          setDisplayedProspects(filteredResults.slice(0, ITEMS_PER_PAGE));\n        }\n      } else {\n        // Charger tous les prospects\n        response = await api.get('/prospects');\n        if (response.data.success) {\n          onProspectsUpdate(response.data.prospects);\n          const filteredResults = response.data.prospects.filter(prospect => {\n            var _prospect$nom2, _prospect$prenom2, _prospect$email2, _prospect$societe2;\n            return ((_prospect$nom2 = prospect.nom) === null || _prospect$nom2 === void 0 ? void 0 : _prospect$nom2.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$prenom2 = prospect.prenom) === null || _prospect$prenom2 === void 0 ? void 0 : _prospect$prenom2.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$email2 = prospect.email) === null || _prospect$email2 === void 0 ? void 0 : _prospect$email2.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$societe2 = prospect.societe) === null || _prospect$societe2 === void 0 ? void 0 : _prospect$societe2.toLowerCase().includes(searchTerm.toLowerCase()));\n          });\n          setDisplayedProspects(filteredResults.slice(0, ITEMS_PER_PAGE));\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedList, searchTerm, handleError, onProspectsUpdate]);\n  const handleFileUpload = async data => {\n    try {\n      setLoading(true);\n      const formattedProspects = data.map(row => ({\n        prenom: row[0] || 'Non disponible',\n        nom: row[1] || 'Non disponible',\n        email: row[2] || 'Non disponible',\n        societe: row[3] || 'Non disponible',\n        linkedin: row[4] || 'Non disponible'\n      }));\n      await Promise.all(formattedProspects.map(prospect => api.post('/prospects/add', prospect)));\n      await fetchProspects();\n      setShowImportModal(false);\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'import des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    try {\n      setLoading(true);\n      await Promise.all(selectedProspects.map(id => api.delete(`/prospects/${id}`)));\n      await fetchProspects();\n      setSelectedProspects([]);\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createNewList = async e => {\n    e.preventDefault();\n    if (newListName.trim() === '') return;\n    try {\n      setLoading(true);\n      const response = await api.post('/lists', {\n        name: newListName\n      });\n      setLists(prev => [...prev, response.data.list]);\n      setNewListName('');\n      setShowCreateListModal(false);\n      setError('');\n    } catch (error) {\n      handleError(error, \"Erreur lors de la création de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditList = async e => {\n    e.preventDefault();\n    if (!editListName.trim() || !currentList) return;\n    try {\n      setLoading(true);\n      const response = await api.put(`/lists/${currentList._id}`, {\n        name: editListName\n      });\n      if (response.data.success) {\n        setLists(prev => prev.map(list => list._id === currentList._id ? {\n          ...list,\n          name: editListName\n        } : list));\n        setShowEditListModal(false);\n        setEditListName('');\n        setCurrentList(null);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la modification de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteList = async listId => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n    try {\n      setLoading(true);\n      const response = await api.delete(`/lists/${listId}`);\n      if (response.data.success) {\n        setLists(prev => prev.filter(list => list._id !== listId));\n        if (selectedList === listId) {\n          setSelectedList(null);\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddProspectsToList = async listId => {\n    try {\n      setLoading(true);\n      await api.post(`/lists/${listId}/prospects`, {\n        prospectIds: selectedProspects\n      });\n      setShowAddToListModal(false);\n      setSelectedProspects([]);\n      await fetchLists();\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMoreProspects = useCallback(() => {\n    const startIndex = displayedProspects.length;\n    const newProspects = filteredProspects.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n    if (newProspects.length > 0) {\n      setDisplayedProspects(prev => [...prev, ...newProspects]);\n    }\n  }, [displayedProspects.length, filteredProspects]);\n  const handleScroll = useCallback(() => {\n    if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 50) {\n      loadMoreProspects();\n    }\n  }, [loadMoreProspects]);\n  const handleSelectProspect = useCallback(id => {\n    setSelectedProspects(prev => prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]);\n  }, []);\n  const handleSelectAll = useCallback(() => {\n    const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n    setSelectedProspects(prev => prev.length === currentProspectIds.length ? [] : [...new Set([...prev, ...currentProspectIds])]);\n  }, [displayedProspects]);\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      if (showCreateListModal) {\n        createNewList(e);\n      } else if (showEditListModal) {\n        handleEditList(e);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchLists();\n  }, [fetchLists]);\n  useEffect(() => {\n    fetchProspects();\n  }, [fetchProspects]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n  const filteredLists = useMemo(() => lists.filter(list => list.name.toLowerCase().includes(listSearchTerm.toLowerCase())), [lists, listSearchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prospect-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Listes de Prospects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher une liste...\",\n        value: listSearchTerm,\n        onChange: e => setListSearchTerm(e.target.value),\n        className: \"list-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-names\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedList(null),\n          className: !selectedList ? 'active' : '',\n          children: \"Tous les prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-item ${selectedList === list._id ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            onClick: () => setSelectedList(list._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", list.prospectsCount || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button edit\",\n              onClick: e => {\n                e.stopPropagation();\n                setCurrentList(list);\n                setEditListName(list.name);\n                setShowEditListModal(true);\n              },\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button delete\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }, this)]\n        }, list._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateListModal(true),\n        className: \"btn add-list-btn\",\n        children: \"Cr\\xE9er une liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prospect-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(true),\n          className: \"btn import-btn\",\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteSelected,\n          className: `btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`,\n          disabled: loading || selectedProspects.length === 0,\n          children: \"Supprimer les prospects s\\xE9lectionn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectAll,\n          className: \"select-all-btn\",\n          children: displayedProspects.every(prospect => selectedProspects.includes(prospect._id)) ? \"Tout désélectionner\" : \"Sélectionner tout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), selectedProspects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddToListModal(true),\n          className: \"btn add-to-list-btn\",\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-input\",\n            placeholder: \"Rechercher un prospect...\",\n            onChange: e => debouncedSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(''),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `prospect-content ${showImportModal ? 'dimmed' : ''}`,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prospect-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"prospect-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"S\\xE9lection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Soci\\xE9t\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"LinkedIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedProspects.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  className: \"no-results\",\n                  children: \"Aucun prospect trouv\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 37\n              }, this) : displayedProspects.map(prospect => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedProspects.includes(prospect._id),\n                    onChange: () => handleSelectProspect(prospect._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`,\n                    alt: `${prospect.prenom} ${prospect.nom}`,\n                    className: \"prospect-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [prospect.prenom, \" \", prospect.nom]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.email || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.societe || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: prospect.linkedin,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"linkedin-btn\",\n                    children: \"Profil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 45\n                }, this)]\n              }, prospect._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this), showCreateListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cr\\xE9er une nouvelle liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createNewList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: newListName,\n              onChange: e => setNewListName(e.target.value),\n              onKeyPress: handleKeyPress,\n              className: \"new-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !newListName.trim() || loading,\n              children: loading ? 'Création...' : 'Créer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowCreateListModal(false);\n                setNewListName('');\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }, this), showEditListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier la liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: editListName,\n              onChange: e => setEditListName(e.target.value),\n              onKeyPress: handleKeyPress,\n              className: \"edit-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !editListName.trim() || loading,\n              children: loading ? 'Modification...' : 'Modifier'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 17\n    }, this), showAddToListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lists-selection\",\n            children: lists.map(list => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddProspectsToList(list._id),\n              className: \"list-selection-btn\",\n              children: list.name\n            }, list._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddToListModal(false),\n            className: \"btn cancel-btn\",\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 17\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          onFileLoaded: handleFileUpload,\n          cssClass: \"csv-reader-input\",\n          label: \"Importer une liste CSV\",\n          parserOptions: {\n            header: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(false),\n          className: \"btn close-btn\",\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n};\n_s(ProspectListWidget, \"tLl1W5AAildEvuqnCYWqOcpDjzk=\");\n_c = ProspectListWidget;\nexport default ProspectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ProspectListWidget\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","CSVReader","axios","debounce","jsxDEV","_jsxDEV","API_BASE_URL","ITEMS_PER_PAGE","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","ProspectListWidget","prospects","onProspectsUpdate","_s","selectedProspects","setSelectedProspects","showImportModal","setShowImportModal","showCreateListModal","setShowCreateListModal","showEditListModal","setShowEditListModal","showAddToListModal","setShowAddToListModal","searchTerm","setSearchTerm","error","setError","loading","setLoading","displayedProspects","setDisplayedProspects","lists","setLists","selectedList","setSelectedList","currentList","setCurrentList","newListName","setNewListName","editListName","setEditListName","listSearchTerm","setListSearchTerm","debouncedSearch","value","filteredProspects","searchTermLower","toLowerCase","filter","prospect","searchFields","nom","prenom","email","societe","map","field","String","some","includes","handleError","message","_error$response","_error$response$data","console","response","data","setTimeout","fetchLists","get","fetchProspects","success","prospectsData","list","filteredResults","_prospect$nom","_prospect$prenom","_prospect$email","_prospect$societe","slice","_prospect$nom2","_prospect$prenom2","_prospect$email2","_prospect$societe2","handleFileUpload","formattedProspects","row","linkedin","Promise","all","post","handleDeleteSelected","id","delete","createNewList","e","preventDefault","trim","name","prev","handleEditList","put","_id","handleDeleteList","listId","window","confirm","handleAddProspectsToList","prospectIds","loadMoreProspects","startIndex","length","newProspects","handleScroll","innerHeight","scrollY","document","documentElement","scrollHeight","handleSelectProspect","prospectId","handleSelectAll","currentProspectIds","Set","handleKeyPress","key","addEventListener","removeEventListener","filteredLists","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","onClick","prospectsCount","stopPropagation","disabled","every","colSpan","checked","src","alt","href","rel","onSubmit","onKeyPress","autoFocus","onFileLoaded","cssClass","label","parserOptions","header","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './ProspectListWidget.css';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 5;\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nconst ProspectListWidget = ({ prospects, onProspectsUpdate }) => {\n    const [selectedProspects, setSelectedProspects] = useState([]);\n    const [showImportModal, setShowImportModal] = useState(false);\n    const [showCreateListModal, setShowCreateListModal] = useState(false);\n    const [showEditListModal, setShowEditListModal] = useState(false);\n    const [showAddToListModal, setShowAddToListModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [displayedProspects, setDisplayedProspects] = useState([]);\n    const [lists, setLists] = useState([]);\n    const [selectedList, setSelectedList] = useState(null);\n    const [currentList, setCurrentList] = useState(null);\n    const [newListName, setNewListName] = useState('');\n    const [editListName, setEditListName] = useState('');\n    const [listSearchTerm, setListSearchTerm] = useState('');\n\n    const debouncedSearch = useCallback(\n        debounce((value) => {\n            setSearchTerm(value);\n        }, 300),\n        []\n    );\n\n    const filteredProspects = useMemo(() => {\n        if (!searchTerm) return prospects;\n\n        const searchTermLower = searchTerm.toLowerCase();\n        return prospects.filter(prospect => {\n            const searchFields = [\n                prospect.nom,\n                prospect.prenom,\n                prospect.email,\n                prospect.societe\n            ].map(field => String(field || '').toLowerCase());\n\n            return searchFields.some(field => field.includes(searchTermLower));\n        });\n    }, [prospects, searchTerm]);\n\n    const handleError = useCallback((error, message) => {\n        console.error(message, error);\n        setError(error.response?.data?.message || message);\n        setTimeout(() => setError(''), 3000);\n    }, []);\n\n    const fetchLists = useCallback(async () => {\n        try {\n            const response = await api.get('/lists');\n            setLists(response.data.lists);\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des listes de prospects\");\n        }\n    }, [handleError]);\n\n    const fetchProspects = useCallback(async () => {\n        try {\n            setLoading(true);\n            let response;\n\n            if (selectedList) {\n                // Charger les prospects de la liste sélectionnée\n                response = await api.get(`/lists/${selectedList}`);\n                if (response.data.success) {\n                    const prospectsData = response.data.list.prospects || [];\n                    onProspectsUpdate(prospectsData);\n\n                    const filteredResults = prospectsData.filter(prospect =>\n                        prospect.nom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                        prospect.prenom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                        prospect.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                        prospect.societe?.toLowerCase().includes(searchTerm.toLowerCase())\n                    );\n                    setDisplayedProspects(filteredResults.slice(0, ITEMS_PER_PAGE));\n                }\n            } else {\n                // Charger tous les prospects\n                response = await api.get('/prospects');\n                if (response.data.success) {\n                    onProspectsUpdate(response.data.prospects);\n                    const filteredResults = response.data.prospects.filter(prospect =>\n                        prospect.nom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                        prospect.prenom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                        prospect.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                        prospect.societe?.toLowerCase().includes(searchTerm.toLowerCase())\n                    );\n                    setDisplayedProspects(filteredResults.slice(0, ITEMS_PER_PAGE));\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    }, [selectedList, searchTerm, handleError, onProspectsUpdate]);\n\n    const handleFileUpload = async (data) => {\n        try {\n            setLoading(true);\n            const formattedProspects = data.map(row => ({\n                prenom: row[0] || 'Non disponible',\n                nom: row[1] || 'Non disponible',\n                email: row[2] || 'Non disponible',\n                societe: row[3] || 'Non disponible',\n                linkedin: row[4] || 'Non disponible'\n            }));\n\n            await Promise.all(\n                formattedProspects.map(prospect =>\n                    api.post('/prospects/add', prospect)\n                )\n            );\n\n            await fetchProspects();\n            setShowImportModal(false);\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'import des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteSelected = async () => {\n        try {\n            setLoading(true);\n            await Promise.all(\n                selectedProspects.map(id =>\n                    api.delete(`/prospects/${id}`)\n                )\n            );\n\n            await fetchProspects();\n            setSelectedProspects([]);\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const createNewList = async (e) => {\n        e.preventDefault();\n        if (newListName.trim() === '') return;\n\n        try {\n            setLoading(true);\n            const response = await api.post('/lists', { name: newListName });\n            setLists(prev => [...prev, response.data.list]);\n            setNewListName('');\n            setShowCreateListModal(false);\n            setError('');\n        } catch (error) {\n            handleError(error, \"Erreur lors de la création de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleEditList = async (e) => {\n        e.preventDefault();\n        if (!editListName.trim() || !currentList) return;\n\n        try {\n            setLoading(true);\n            const response = await api.put(`/lists/${currentList._id}`, {\n                name: editListName\n            });\n\n            if (response.data.success) {\n                setLists(prev => prev.map(list =>\n                    list._id === currentList._id\n                        ? { ...list, name: editListName }\n                        : list\n                ));\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la modification de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteList = async (listId) => {\n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n\n        try {\n            setLoading(true);\n            const response = await api.delete(`/lists/${listId}`);\n\n            if (response.data.success) {\n                setLists(prev => prev.filter(list => list._id !== listId));\n                if (selectedList === listId) {\n                    setSelectedList(null);\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleAddProspectsToList = async (listId) => {\n        try {\n            setLoading(true);\n            await api.post(`/lists/${listId}/prospects`, {\n                prospectIds: selectedProspects\n            });\n\n            setShowAddToListModal(false);\n            setSelectedProspects([]);\n            await fetchLists();\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const loadMoreProspects = useCallback(() => {\n        const startIndex = displayedProspects.length;\n        const newProspects = filteredProspects.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n        if (newProspects.length > 0) {\n            setDisplayedProspects(prev => [...prev, ...newProspects]);\n        }\n    }, [displayedProspects.length, filteredProspects]);\n\n    const handleScroll = useCallback(() => {\n        if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 50) {\n            loadMoreProspects();\n        }\n    }, [loadMoreProspects]);\n\n    const handleSelectProspect = useCallback((id) => {\n        setSelectedProspects(prev =>\n            prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]\n        );\n    }, []);\n\n    const handleSelectAll = useCallback(() => {\n        const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n        setSelectedProspects(prev =>\n            prev.length === currentProspectIds.length ? [] : [...new Set([...prev, ...currentProspectIds])]\n        );\n    }, [displayedProspects]);\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            if (showCreateListModal) {\n                createNewList(e);\n            } else if (showEditListModal) {\n                handleEditList(e);\n            }\n        }\n    };\n\n    useEffect(() => {\n        fetchLists();\n    }, [fetchLists]);\n\n    useEffect(() => {\n        fetchProspects();\n    }, [fetchProspects]);\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [handleScroll]);\n\n    const filteredLists = useMemo(() =>\n            lists.filter(list =>\n                list.name.toLowerCase().includes(listSearchTerm.toLowerCase())\n            ),\n        [lists, listSearchTerm]);\n\n    return (\n        <div className=\"prospect-list-widget\">\n            <div className=\"list-sidebar\">\n                <h3>Listes de Prospects</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Rechercher une liste...\"\n                    value={listSearchTerm}\n                    onChange={(e) => setListSearchTerm(e.target.value)}\n                    className=\"list-search-input\"\n                />\n                <ul className=\"list-names\">\n                    <li\n                        onClick={() => setSelectedList(null)}\n                        className={!selectedList ? 'active' : ''}\n                    >\n                        Tous les prospects\n                    </li>\n                    {filteredLists.map(list => (\n                        <li\n                            key={list._id}\n                            className={`list-item ${selectedList === list._id ? 'active' : ''}`}\n                        >\n                            <div\n                                className=\"list-item-content\"\n                                onClick={() => setSelectedList(list._id)}\n                            >\n                                <span className=\"list-name\">{list.name}</span>\n                                <span className=\"list-count\">\n                                    ({list.prospectsCount || 0})\n                                </span>\n                            </div>\n                            <div className=\"list-actions\">\n                                <button\n                                    className=\"icon-button edit\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        setCurrentList(list);\n                                        setEditListName(list.name);\n                                        setShowEditListModal(true);\n                                    }}\n                                >\n                                    ✏️\n                                </button>\n                                <button\n                                    className=\"icon-button delete\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleDeleteList(list._id);\n                                    }}\n                                >\n                                    🗑️\n                                </button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                <button\n                    onClick={() => setShowCreateListModal(true)}\n                    className=\"btn add-list-btn\"\n                >\n                    Créer une liste\n                </button>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"prospect-actions\">\n                    <button onClick={() => setShowImportModal(true)} className=\"btn import-btn\">\n                        Importer des prospects\n                    </button>\n                    <button\n                        onClick={handleDeleteSelected}\n                        className={`btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`}\n                        disabled={loading || selectedProspects.length === 0}\n                    >\n                        Supprimer les prospects sélectionnés\n                    </button>\n                    <button onClick={handleSelectAll} className=\"select-all-btn\">\n                        {displayedProspects.every(prospect => selectedProspects.includes(prospect._id))\n                            ? \"Tout désélectionner\"\n                            : \"Sélectionner tout\"\n                        }\n                    </button>\n                    {selectedProspects.length > 0 && (\n                        <button\n                            onClick={() => setShowAddToListModal(true)}\n                            className=\"btn add-to-list-btn\"\n                        >\n                            Ajouter à une liste\n                        </button>\n                    )}\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            className=\"search-input\"\n                            placeholder=\"Rechercher un prospect...\"\n                            onChange={(e) => debouncedSearch(e.target.value)}\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"clear-search\"\n                                onClick={() => setSearchTerm('')}\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                </div>\n\n                <div className={`prospect-content ${showImportModal ? 'dimmed' : ''}`}>\n                    {loading ? (\n                        <div className=\"loading\">Chargement...</div>\n                    ) : (\n                        <div className=\"prospect-table-container\">\n                            <table className=\"prospect-table\">\n                                <thead>\n                                <tr>\n                                    <th>Sélection</th>\n                                    <th>Photo</th>\n                                    <th>Nom</th>\n                                    <th>Email</th>\n                                    <th>Société</th>\n                                    <th>LinkedIn</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {displayedProspects.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"6\" className=\"no-results\">\n                                            Aucun prospect trouvé\n                                        </td>\n                                    </tr>\n                                ) : (\n                                    displayedProspects.map((prospect) => (\n                                        <tr key={prospect._id}>\n                                            <td>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={selectedProspects.includes(prospect._id)}\n                                                    onChange={() => handleSelectProspect(prospect._id)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <img\n                                                    src={`https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`}\n                                                    alt={`${prospect.prenom} ${prospect.nom}`}\n                                                    className=\"prospect-avatar\"\n                                                />\n                                            </td>\n                                            <td>{prospect.prenom} {prospect.nom}</td>\n                                            <td>{prospect.email || 'Non disponible'}</td>\n                                            <td>{prospect.societe || 'Non disponible'}</td>\n                                            <td>\n                                                <a\n                                                    href={prospect.linkedin}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"linkedin-btn\"\n                                                >\n                                                    Profil\n                                                </a>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Modal de création de liste */}\n            {showCreateListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Créer une nouvelle liste</h3>\n                        <form onSubmit={createNewList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={newListName}\n                                    onChange={(e) => setNewListName(e.target.value)}\n                                    onKeyPress={handleKeyPress}\n                                    className=\"new-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!newListName.trim() || loading}\n                                >\n                                    {loading ? 'Création...' : 'Créer'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowCreateListModal(false);\n                                        setNewListName('');\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {/* Modal de modification de liste */}\n            {showEditListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Modifier la liste</h3>\n                        <form onSubmit={handleEditList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={editListName}\n                                    onChange={(e) => setEditListName(e.target.value)}\n                                    onKeyPress={handleKeyPress}\n                                    className=\"edit-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!editListName.trim() || loading}\n                                >\n                                    {loading ? 'Modification...' : 'Modifier'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowEditListModal(false);\n                                        setEditListName('');\n                                        setCurrentList(null);\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {/* Modal d'ajout à une liste */}\n            {showAddToListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Ajouter à une liste</h3>\n                        <div className=\"modal-body\">\n                            <div className=\"lists-selection\">\n                                {lists.map(list => (\n                                    <button\n                                        key={list._id}\n                                        onClick={() => handleAddProspectsToList(list._id)}\n                                        className=\"list-selection-btn\"\n                                    >\n                                        {list.name}\n                                    </button>\n                                ))}\n                            </div>\n                            {error && <p className=\"error-message\">{error}</p>}\n                        </div>\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowAddToListModal(false)}\n                                className=\"btn cancel-btn\"\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Modal d'import */}\n            {showImportModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Importer des prospects</h3>\n                        <CSVReader\n                            onFileLoaded={handleFileUpload}\n                            cssClass=\"csv-reader-input\"\n                            label=\"Importer une liste CSV\"\n                            parserOptions={{ header: false }}\n                        />\n                        <button\n                            onClick={() => setShowImportModal(false)}\n                            className=\"btn close-btn\"\n                        >\n                            Fermer\n                        </button>\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProspectListWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}