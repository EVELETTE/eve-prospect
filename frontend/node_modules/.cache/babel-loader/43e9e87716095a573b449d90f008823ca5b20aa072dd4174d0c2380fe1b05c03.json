{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './ProspectListWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 5;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst ProspectListWidget = ({\n  prospects: initialProspects,\n  onProspectsUpdate\n}) => {\n  _s();\n  const [selectedProspects, setSelectedProspects] = useState([]);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [showCreateListModal, setShowCreateListModal] = useState(false);\n  const [showEditListModal, setShowEditListModal] = useState(false);\n  const [showAddToListModal, setShowAddToListModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayedProspects, setDisplayedProspects] = useState([]);\n  const [allProspects, setAllProspects] = useState(initialProspects || []);\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [currentList, setCurrentList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [editListName, setEditListName] = useState('');\n  const [listSearchTerm, setListSearchTerm] = useState('');\n  const debouncedSearch = useCallback(debounce(value => {\n    setSearchTerm(value);\n  }, 300), []);\n  const handleError = useCallback((error, message) => {\n    var _error$response, _error$response$data;\n    console.error(message, error);\n    setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || message);\n    setTimeout(() => setError(''), 3000);\n  }, []);\n  const fetchLists = useCallback(async () => {\n    try {\n      const response = await api.get('/lists');\n      if (response.data.success) {\n        console.log(\"Listes récupérées:\", response.data.lists);\n        setLists(response.data.lists);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des listes de prospects\");\n    }\n  }, [handleError]);\n  const fetchProspects = useCallback(async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (selectedList) {\n        // Si une liste spécifique est sélectionnée\n        console.log(\"Chargement de la liste:\", selectedList);\n        response = await api.get(`/lists/${selectedList}`);\n        if (response.data.success && response.data.list) {\n          console.log(\"Prospects de la liste:\", response.data.list.prospects);\n          const formattedProspects = response.data.list.prospects.map(prospect => ({\n            _id: prospect._id,\n            prenom: prospect.prenom,\n            nom: prospect.nom,\n            email: prospect.email,\n            societe: prospect.societe,\n            linkedin: prospect.linkedin\n          }));\n          setAllProspects(formattedProspects);\n          setDisplayedProspects(formattedProspects.slice(0, ITEMS_PER_PAGE));\n          onProspectsUpdate(formattedProspects);\n        }\n      } else {\n        // Si on veut tous les prospects\n        console.log(\"Chargement de tous les prospects\");\n        response = await api.get('/prospects');\n        if (response.data.success) {\n          console.log(\"Tous les prospects:\", response.data.prospects);\n          const prospects = response.data.prospects;\n          setAllProspects(prospects);\n          setDisplayedProspects(prospects.slice(0, ITEMS_PER_PAGE));\n          onProspectsUpdate(prospects);\n        }\n      }\n    } catch (error) {\n      console.error(\"Erreur chargement prospects:\", error);\n      handleError(error, \"Erreur lors du chargement des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedList, handleError, onProspectsUpdate]);\n  const filteredProspects = useMemo(() => {\n    if (!searchTerm) return allProspects;\n    const searchTermLower = searchTerm.toLowerCase();\n    return allProspects.filter(prospect => {\n      if (!prospect) return false;\n      const searchFields = [prospect.nom, prospect.prenom, prospect.email, prospect.societe].map(field => String(field || '').toLowerCase());\n      return searchFields.some(field => field.includes(searchTermLower));\n    });\n  }, [allProspects, searchTerm]);\n  useEffect(() => {\n    if (filteredProspects.length > 0) {\n      setDisplayedProspects(filteredProspects.slice(0, ITEMS_PER_PAGE));\n    }\n  }, [filteredProspects]);\n  useEffect(() => {\n    console.log(\"selectedList changed:\", selectedList);\n    if (selectedList !== undefined) {\n      fetchProspects();\n    }\n  }, [selectedList, fetchProspects]);\n  useEffect(() => {\n    fetchLists();\n  }, [fetchLists]);\n  const handleFileUpload = async data => {\n    try {\n      setLoading(true);\n      const formattedProspects = data.map(row => ({\n        prenom: row[0] || 'Non disponible',\n        nom: row[1] || 'Non disponible',\n        email: row[2] || 'Non disponible',\n        societe: row[3] || 'Non disponible',\n        linkedin: row[4] || 'Non disponible'\n      }));\n      await Promise.all(formattedProspects.map(prospect => api.post('/prospects/add', prospect)));\n      await fetchProspects();\n      setShowImportModal(false);\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'import des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    try {\n      setLoading(true);\n      await Promise.all(selectedProspects.map(id => api.delete(`/prospects/${id}`)));\n      await fetchProspects();\n      setSelectedProspects([]);\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createNewList = async e => {\n    e.preventDefault();\n    if (newListName.trim() === '') return;\n    try {\n      setLoading(true);\n      const response = await api.post('/lists', {\n        name: newListName\n      });\n      if (response.data.success) {\n        await fetchLists();\n        setNewListName('');\n        setShowCreateListModal(false);\n        setError('');\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la création de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditList = async e => {\n    e.preventDefault();\n    if (!editListName.trim() || !currentList) return;\n    try {\n      setLoading(true);\n      const response = await api.put(`/lists/${currentList._id}`, {\n        name: editListName\n      });\n      if (response.data.success) {\n        await fetchLists();\n        setShowEditListModal(false);\n        setEditListName('');\n        setCurrentList(null);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la modification de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteList = async listId => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n    try {\n      setLoading(true);\n      const response = await api.delete(`/lists/${listId}`);\n      if (response.data.success) {\n        await fetchLists();\n        if (selectedList === listId) {\n          setSelectedList(null);\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleListClick = async listId => {\n    console.log(\"Clicking list:\", listId);\n    setSelectedList(listId);\n    setSelectedProspects([]);\n    await fetchProspects();\n  };\n  const handleAddProspectsToList = async listId => {\n    try {\n      setLoading(true);\n      const response = await api.post(`/lists/${listId}/prospects`, {\n        prospectIds: selectedProspects\n      });\n      if (response.data.success) {\n        await fetchLists();\n        setShowAddToListModal(false);\n        setSelectedProspects([]);\n        if (selectedList === listId) {\n          await fetchProspects();\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMoreProspects = useCallback(() => {\n    const startIndex = displayedProspects.length;\n    const endIndex = startIndex + ITEMS_PER_PAGE;\n    const newProspects = filteredProspects.slice(startIndex, endIndex);\n    if (newProspects.length > 0) {\n      setDisplayedProspects(prev => [...prev, ...newProspects]);\n    }\n  }, [displayedProspects.length, filteredProspects]);\n  const handleScroll = useCallback(() => {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = window.scrollY;\n    const clientHeight = window.innerHeight;\n    if (scrollTop + clientHeight >= scrollHeight - 50) {\n      loadMoreProspects();\n    }\n  }, [loadMoreProspects]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n  const handleSelectProspect = useCallback(id => {\n    setSelectedProspects(prev => prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]);\n  }, []);\n  const handleSelectAll = useCallback(() => {\n    const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n    setSelectedProspects(prev => prev.length === currentProspectIds.length ? [] : [...new Set([...prev, ...currentProspectIds])]);\n  }, [displayedProspects]);\n  const filteredLists = useMemo(() => lists.filter(list => list.name.toLowerCase().includes(listSearchTerm.toLowerCase())), [lists, listSearchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prospect-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Listes de Prospects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher une liste...\",\n        value: listSearchTerm,\n        onChange: e => setListSearchTerm(e.target.value),\n        className: \"list-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-names\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleListClick(null),\n          className: `list-item ${!selectedList ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: \"Tous les prospects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", allProspects.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-item ${selectedList === list._id ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            onClick: () => handleListClick(list._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", list.prospectsCount || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button edit\",\n              onClick: e => {\n                e.stopPropagation();\n                setCurrentList(list);\n                setEditListName(list.name);\n                setShowEditListModal(true);\n              },\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button delete\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)]\n        }, list._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateListModal(true),\n        className: \"btn add-list-btn\",\n        children: \"Cr\\xE9er une liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prospect-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(true),\n          className: \"btn import-btn\",\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteSelected,\n          className: `btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`,\n          disabled: loading || selectedProspects.length === 0,\n          children: \"Supprimer les prospects s\\xE9lectionn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this), selectedProspects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddToListModal(true),\n          className: \"btn add-to-list-btn\",\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-input\",\n            placeholder: \"Rechercher un prospect...\",\n            onChange: e => debouncedSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(''),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `prospect-content ${showImportModal ? 'dimmed' : ''}`,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prospect-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"prospect-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: displayedProspects.length > 0 && displayedProspects.every(prospect => selectedProspects.includes(prospect._id)),\n                    onChange: handleSelectAll\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Soci\\xE9t\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"LinkedIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedProspects.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  className: \"no-results\",\n                  children: \"Aucun prospect trouv\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this) : displayedProspects.map(prospect => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedProspects.includes(prospect._id),\n                    onChange: () => handleSelectProspect(prospect._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`,\n                    alt: `${prospect.prenom} ${prospect.nom}`,\n                    className: \"prospect-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [prospect.prenom, \" \", prospect.nom]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.email || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.societe || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: prospect.linkedin,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"linkedin-btn\",\n                    children: \"Voir le profil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 45\n                }, this)]\n              }, prospect._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this), showCreateListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cr\\xE9er une nouvelle liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createNewList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: newListName,\n              onChange: e => setNewListName(e.target.value),\n              className: \"new-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !newListName.trim() || loading,\n              children: loading ? 'Création...' : 'Créer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowCreateListModal(false);\n                setNewListName('');\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 17\n    }, this), showEditListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier la liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: editListName,\n              onChange: e => setEditListName(e.target.value),\n              className: \"edit-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !editListName.trim() || loading,\n              children: loading ? 'Modification...' : 'Modifier'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 17\n    }, this), showAddToListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lists-selection\",\n            children: filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddProspectsToList(list._id),\n              className: \"list-selection-btn\",\n              disabled: loading,\n              children: list.name\n            }, list._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddToListModal(false),\n            className: \"btn cancel-btn\",\n            disabled: loading,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          onFileLoaded: handleFileUpload,\n          cssClass: \"csv-reader-input\",\n          label: \"Importer une liste CSV\",\n          parserOptions: {\n            header: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowImportModal(false),\n            className: \"btn cancel-btn\",\n            disabled: loading,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 9\n  }, this);\n};\n_s(ProspectListWidget, \"bsgnntrIVJ9z4TiDyoJJ5rjKbzs=\");\n_c = ProspectListWidget;\nexport default ProspectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ProspectListWidget\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","CSVReader","axios","debounce","jsxDEV","_jsxDEV","API_BASE_URL","ITEMS_PER_PAGE","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","ProspectListWidget","prospects","initialProspects","onProspectsUpdate","_s","selectedProspects","setSelectedProspects","showImportModal","setShowImportModal","showCreateListModal","setShowCreateListModal","showEditListModal","setShowEditListModal","showAddToListModal","setShowAddToListModal","searchTerm","setSearchTerm","error","setError","loading","setLoading","displayedProspects","setDisplayedProspects","allProspects","setAllProspects","lists","setLists","selectedList","setSelectedList","currentList","setCurrentList","newListName","setNewListName","editListName","setEditListName","listSearchTerm","setListSearchTerm","debouncedSearch","value","handleError","message","_error$response","_error$response$data","console","response","data","setTimeout","fetchLists","get","success","log","fetchProspects","list","formattedProspects","map","prospect","_id","prenom","nom","email","societe","linkedin","slice","filteredProspects","searchTermLower","toLowerCase","filter","searchFields","field","String","some","includes","length","undefined","handleFileUpload","row","Promise","all","post","handleDeleteSelected","id","delete","createNewList","e","preventDefault","trim","name","handleEditList","put","handleDeleteList","listId","window","confirm","handleListClick","handleAddProspectsToList","prospectIds","loadMoreProspects","startIndex","endIndex","newProspects","prev","handleScroll","scrollHeight","document","documentElement","scrollTop","scrollY","clientHeight","innerHeight","addEventListener","removeEventListener","handleSelectProspect","prospectId","handleSelectAll","currentProspectIds","Set","filteredLists","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","onClick","prospectsCount","stopPropagation","disabled","checked","every","colSpan","src","alt","href","rel","onSubmit","autoFocus","onFileLoaded","cssClass","label","parserOptions","header","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport './ProspectListWidget.css';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 5;\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nconst ProspectListWidget = ({ prospects: initialProspects, onProspectsUpdate }) => {\n    const [selectedProspects, setSelectedProspects] = useState([]);\n    const [showImportModal, setShowImportModal] = useState(false);\n    const [showCreateListModal, setShowCreateListModal] = useState(false);\n    const [showEditListModal, setShowEditListModal] = useState(false);\n    const [showAddToListModal, setShowAddToListModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [displayedProspects, setDisplayedProspects] = useState([]);\n    const [allProspects, setAllProspects] = useState(initialProspects || []);\n    const [lists, setLists] = useState([]);\n    const [selectedList, setSelectedList] = useState(null);\n    const [currentList, setCurrentList] = useState(null);\n    const [newListName, setNewListName] = useState('');\n    const [editListName, setEditListName] = useState('');\n    const [listSearchTerm, setListSearchTerm] = useState('');\n\n    const debouncedSearch = useCallback(\n        debounce((value) => {\n            setSearchTerm(value);\n        }, 300),\n        []\n    );\n\n    const handleError = useCallback((error, message) => {\n        console.error(message, error);\n        setError(error.response?.data?.message || message);\n        setTimeout(() => setError(''), 3000);\n    }, []);\n\n    const fetchLists = useCallback(async () => {\n        try {\n            const response = await api.get('/lists');\n            if (response.data.success) {\n                console.log(\"Listes récupérées:\", response.data.lists);\n                setLists(response.data.lists);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des listes de prospects\");\n        }\n    }, [handleError]);\n\n    const fetchProspects = useCallback(async () => {\n        try {\n            setLoading(true);\n            let response;\n\n            if (selectedList) {\n                // Si une liste spécifique est sélectionnée\n                console.log(\"Chargement de la liste:\", selectedList);\n                response = await api.get(`/lists/${selectedList}`);\n                if (response.data.success && response.data.list) {\n                    console.log(\"Prospects de la liste:\", response.data.list.prospects);\n                    const formattedProspects = response.data.list.prospects.map(prospect => ({\n                        _id: prospect._id,\n                        prenom: prospect.prenom,\n                        nom: prospect.nom,\n                        email: prospect.email,\n                        societe: prospect.societe,\n                        linkedin: prospect.linkedin\n                    }));\n                    setAllProspects(formattedProspects);\n                    setDisplayedProspects(formattedProspects.slice(0, ITEMS_PER_PAGE));\n                    onProspectsUpdate(formattedProspects);\n                }\n            } else {\n                // Si on veut tous les prospects\n                console.log(\"Chargement de tous les prospects\");\n                response = await api.get('/prospects');\n                if (response.data.success) {\n                    console.log(\"Tous les prospects:\", response.data.prospects);\n                    const prospects = response.data.prospects;\n                    setAllProspects(prospects);\n                    setDisplayedProspects(prospects.slice(0, ITEMS_PER_PAGE));\n                    onProspectsUpdate(prospects);\n                }\n            }\n        } catch (error) {\n            console.error(\"Erreur chargement prospects:\", error);\n            handleError(error, \"Erreur lors du chargement des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    }, [selectedList, handleError, onProspectsUpdate]);\n    const filteredProspects = useMemo(() => {\n        if (!searchTerm) return allProspects;\n\n        const searchTermLower = searchTerm.toLowerCase();\n        return allProspects.filter(prospect => {\n            if (!prospect) return false;\n            const searchFields = [\n                prospect.nom,\n                prospect.prenom,\n                prospect.email,\n                prospect.societe\n            ].map(field => String(field || '').toLowerCase());\n\n            return searchFields.some(field => field.includes(searchTermLower));\n        });\n    }, [allProspects, searchTerm]);\n\n    useEffect(() => {\n        if (filteredProspects.length > 0) {\n            setDisplayedProspects(filteredProspects.slice(0, ITEMS_PER_PAGE));\n        }\n    }, [filteredProspects]);\n\n    useEffect(() => {\n        console.log(\"selectedList changed:\", selectedList);\n        if (selectedList !== undefined) {\n            fetchProspects();\n        }\n    }, [selectedList, fetchProspects]);\n\n    useEffect(() => {\n        fetchLists();\n    }, [fetchLists]);\n\n    const handleFileUpload = async (data) => {\n        try {\n            setLoading(true);\n            const formattedProspects = data.map(row => ({\n                prenom: row[0] || 'Non disponible',\n                nom: row[1] || 'Non disponible',\n                email: row[2] || 'Non disponible',\n                societe: row[3] || 'Non disponible',\n                linkedin: row[4] || 'Non disponible'\n            }));\n\n            await Promise.all(\n                formattedProspects.map(prospect =>\n                    api.post('/prospects/add', prospect)\n                )\n            );\n\n            await fetchProspects();\n            setShowImportModal(false);\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'import des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteSelected = async () => {\n        try {\n            setLoading(true);\n            await Promise.all(\n                selectedProspects.map(id =>\n                    api.delete(`/prospects/${id}`)\n                )\n            );\n\n            await fetchProspects();\n            setSelectedProspects([]);\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const createNewList = async (e) => {\n        e.preventDefault();\n        if (newListName.trim() === '') return;\n\n        try {\n            setLoading(true);\n            const response = await api.post('/lists', { name: newListName });\n            if (response.data.success) {\n                await fetchLists();\n                setNewListName('');\n                setShowCreateListModal(false);\n                setError('');\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la création de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleEditList = async (e) => {\n        e.preventDefault();\n        if (!editListName.trim() || !currentList) return;\n\n        try {\n            setLoading(true);\n            const response = await api.put(`/lists/${currentList._id}`, {\n                name: editListName\n            });\n\n            if (response.data.success) {\n                await fetchLists();\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la modification de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteList = async (listId) => {\n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n\n        try {\n            setLoading(true);\n            const response = await api.delete(`/lists/${listId}`);\n\n            if (response.data.success) {\n                await fetchLists();\n                if (selectedList === listId) {\n                    setSelectedList(null);\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleListClick = async (listId) => {\n        console.log(\"Clicking list:\", listId);\n        setSelectedList(listId);\n        setSelectedProspects([]);\n        await fetchProspects();\n    };\n\n    const handleAddProspectsToList = async (listId) => {\n        try {\n            setLoading(true);\n            const response = await api.post(`/lists/${listId}/prospects`, {\n                prospectIds: selectedProspects\n            });\n\n            if (response.data.success) {\n                await fetchLists();\n                setShowAddToListModal(false);\n                setSelectedProspects([]);\n                if (selectedList === listId) {\n                    await fetchProspects();\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const loadMoreProspects = useCallback(() => {\n        const startIndex = displayedProspects.length;\n        const endIndex = startIndex + ITEMS_PER_PAGE;\n        const newProspects = filteredProspects.slice(startIndex, endIndex);\n        if (newProspects.length > 0) {\n            setDisplayedProspects(prev => [...prev, ...newProspects]);\n        }\n    }, [displayedProspects.length, filteredProspects]);\n\n    const handleScroll = useCallback(() => {\n        const scrollHeight = document.documentElement.scrollHeight;\n        const scrollTop = window.scrollY;\n        const clientHeight = window.innerHeight;\n\n        if (scrollTop + clientHeight >= scrollHeight - 50) {\n            loadMoreProspects();\n        }\n    }, [loadMoreProspects]);\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [handleScroll]);\n\n    const handleSelectProspect = useCallback((id) => {\n        setSelectedProspects(prev =>\n            prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]\n        );\n    }, []);\n\n    const handleSelectAll = useCallback(() => {\n        const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n        setSelectedProspects(prev =>\n            prev.length === currentProspectIds.length ? [] : [...new Set([...prev, ...currentProspectIds])]\n        );\n    }, [displayedProspects]);\n\n    const filteredLists = useMemo(() =>\n            lists.filter(list =>\n                list.name.toLowerCase().includes(listSearchTerm.toLowerCase())\n            ),\n        [lists, listSearchTerm]);\n\n    return (\n        <div className=\"prospect-list-widget\">\n            <div className=\"list-sidebar\">\n                <h3>Listes de Prospects</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Rechercher une liste...\"\n                    value={listSearchTerm}\n                    onChange={(e) => setListSearchTerm(e.target.value)}\n                    className=\"list-search-input\"\n                />\n                <ul className=\"list-names\">\n                    <li\n                        onClick={() => handleListClick(null)}\n                        className={`list-item ${!selectedList ? 'active' : ''}`}\n                    >\n                        <div className=\"list-item-content\">\n                            <span className=\"list-name\">Tous les prospects</span>\n                            <span className=\"list-count\">({allProspects.length})</span>\n                        </div>\n                    </li>\n                    {filteredLists.map(list => (\n                        <li\n                            key={list._id}\n                            className={`list-item ${selectedList === list._id ? 'active' : ''}`}\n                        >\n                            <div\n                                className=\"list-item-content\"\n                                onClick={() => handleListClick(list._id)}\n                            >\n                                <span className=\"list-name\">{list.name}</span>\n                                <span className=\"list-count\">\n                                    ({list.prospectsCount || 0})\n                                </span>\n                            </div>\n                            <div className=\"list-actions\">\n                                <button\n                                    className=\"icon-button edit\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        setCurrentList(list);\n                                        setEditListName(list.name);\n                                        setShowEditListModal(true);\n                                    }}\n                                >\n                                    ✏️\n                                </button>\n                                <button\n                                    className=\"icon-button delete\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleDeleteList(list._id);\n                                    }}\n                                >\n                                    🗑️\n                                </button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                <button\n                    onClick={() => setShowCreateListModal(true)}\n                    className=\"btn add-list-btn\"\n                >\n                    Créer une liste\n                </button>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"prospect-actions\">\n                    <button onClick={() => setShowImportModal(true)} className=\"btn import-btn\">\n                        Importer des prospects\n                    </button>\n                    <button\n                        onClick={handleDeleteSelected}\n                        className={`btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`}\n                        disabled={loading || selectedProspects.length === 0}\n                    >\n                        Supprimer les prospects sélectionnés\n                    </button>\n                    {selectedProspects.length > 0 && (\n                        <button\n                            onClick={() => setShowAddToListModal(true)}\n                            className=\"btn add-to-list-btn\"\n                        >\n                            Ajouter à une liste\n                        </button>\n                    )}\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            className=\"search-input\"\n                            placeholder=\"Rechercher un prospect...\"\n                            onChange={(e) => debouncedSearch(e.target.value)}\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"clear-search\"\n                                onClick={() => setSearchTerm('')}\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                </div>\n\n                <div className={`prospect-content ${showImportModal ? 'dimmed' : ''}`}>\n                    {loading ? (\n                        <div className=\"loading\">Chargement...</div>\n                    ) : (\n                        <div className=\"prospect-table-container\">\n                            <table className=\"prospect-table\">\n                                <thead>\n                                <tr>\n                                    <th>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={displayedProspects.length > 0 &&\n                                                displayedProspects.every(prospect =>\n                                                    selectedProspects.includes(prospect._id)\n                                                )}\n                                            onChange={handleSelectAll}\n                                        />\n                                    </th>\n                                    <th>Photo</th>\n                                    <th>Nom</th>\n                                    <th>Email</th>\n                                    <th>Société</th>\n                                    <th>LinkedIn</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {displayedProspects.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"6\" className=\"no-results\">\n                                            Aucun prospect trouvé\n                                        </td>\n                                    </tr>\n                                ) : (\n                                    displayedProspects.map((prospect) => (\n                                        <tr key={prospect._id}>\n                                            <td>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={selectedProspects.includes(prospect._id)}\n                                                    onChange={() => handleSelectProspect(prospect._id)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <img\n                                                    src={`https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`}\n                                                    alt={`${prospect.prenom} ${prospect.nom}`}\n                                                    className=\"prospect-avatar\"\n                                                />\n                                            </td>\n                                            <td>{prospect.prenom} {prospect.nom}</td>\n                                            <td>{prospect.email || 'Non disponible'}</td>\n                                            <td>{prospect.societe || 'Non disponible'}</td>\n                                            <td>\n                                                <a\n                                                    href={prospect.linkedin}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"linkedin-btn\"\n                                                >\n                                                    Voir le profil\n                                                </a>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Modaux */}\n            {showCreateListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Créer une nouvelle liste</h3>\n                        <form onSubmit={createNewList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={newListName}\n                                    onChange={(e) => setNewListName(e.target.value)}\n                                    className=\"new-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!newListName.trim() || loading}\n                                >\n                                    {loading ? 'Création...' : 'Créer'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowCreateListModal(false);\n                                        setNewListName('');\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {showEditListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Modifier la liste</h3>\n                        <form onSubmit={handleEditList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={editListName}\n                                    onChange={(e) => setEditListName(e.target.value)}\n                                    className=\"edit-list-input\"autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!editListName.trim() || loading}\n                                >\n                                    {loading ? 'Modification...' : 'Modifier'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowEditListModal(false);\n                                        setEditListName('');\n                                        setCurrentList(null);\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {showAddToListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Ajouter à une liste</h3>\n                        <div className=\"modal-body\">\n                            <div className=\"lists-selection\">\n                                {filteredLists.map(list => (\n                                    <button\n                                        key={list._id}\n                                        onClick={() => handleAddProspectsToList(list._id)}\n                                        className=\"list-selection-btn\"\n                                        disabled={loading}\n                                    >\n                                        {list.name}\n                                    </button>\n                                ))}\n                            </div>\n                            {error && <p className=\"error-message\">{error}</p>}\n                        </div>\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowAddToListModal(false)}\n                                className=\"btn cancel-btn\"\n                                disabled={loading}\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {showImportModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Importer des prospects</h3>\n                        <CSVReader\n                            onFileLoaded={handleFileUpload}\n                            cssClass=\"csv-reader-input\"\n                            label=\"Importer une liste CSV\"\n                            parserOptions={{ header: false }}\n                        />\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowImportModal(false)}\n                                className=\"btn cancel-btn\"\n                                disabled={loading}\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProspectListWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}