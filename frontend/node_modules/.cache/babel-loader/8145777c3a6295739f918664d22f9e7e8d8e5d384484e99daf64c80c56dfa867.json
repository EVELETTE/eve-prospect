{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/NotificationCenter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { Bell, Check, Trash2, X } from 'lucide-react';\nimport './NotificationCenter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const pollInterval = useRef(null);\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n  // Fonction optimisée pour récupérer les notifications\n  const fetchNotifications = useCallback(async (showLoading = false) => {\n    try {\n      if (showLoading) setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const response = await axios.get('http://localhost:5001/api/notifications', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Cache-Control': 'no-cache'\n        },\n        params: {\n          timestamp: Date.now()\n        } // Évite la mise en cache\n      });\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n        setUnreadCount(response.data.unreadCount);\n        setLastUpdate(Date.now());\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des notifications:', error);\n    } finally {\n      if (showLoading) setLoading(false);\n    }\n  }, []);\n\n  // Initialisation du polling et mise à jour automatique\n  useEffect(() => {\n    fetchNotifications(true); // Premier chargement avec loading\n\n    // Mise à jour toutes les 5 secondes\n    pollInterval.current = setInterval(() => {\n      fetchNotifications(false);\n    }, 5000);\n    return () => {\n      if (pollInterval.current) {\n        clearInterval(pollInterval.current);\n      }\n    };\n  }, [fetchNotifications]);\n\n  // Mise à jour lors du retour sur l'onglet\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        fetchNotifications(false);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, [fetchNotifications]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Action optimisée pour marquer comme lu\n  const markAsRead = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:5001/api/notifications/${id}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // Mise à jour optimiste de l'UI\n      setNotifications(prevNotifications => prevNotifications.map(notif => notif._id === id ? {\n        ...notif,\n        read: true\n      } : notif));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n      fetchNotifications(false); // Rafraîchissement en arrière-plan\n    } catch (error) {\n      console.error('Erreur lors du marquage de la notification:', error);\n      fetchNotifications(true); // Rafraîchissement forcé en cas d'erreur\n    }\n  };\n\n  // Action optimisée pour tout marquer comme lu\n  const markAllAsRead = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:5001/api/notifications/read-all', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // Mise à jour optimiste de l'UI\n      setNotifications(prevNotifications => prevNotifications.map(notif => ({\n        ...notif,\n        read: true\n      })));\n      setUnreadCount(0);\n      fetchNotifications(false); // Rafraîchissement en arrière-plan\n    } catch (error) {\n      console.error('Erreur lors du marquage des notifications:', error);\n      fetchNotifications(true); // Rafraîchissement forcé en cas d'erreur\n    }\n  };\n\n  // Action optimisée pour la suppression\n  const deleteNotification = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      // Mise à jour optimiste de l'UI\n      setNotifications(prevNotifications => prevNotifications.filter(notif => notif._id !== id));\n      await axios.delete(`http://localhost:5001/api/notifications/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications(false); // Rafraîchissement en arrière-plan\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la notification:', error);\n      fetchNotifications(true); // Rafraîchissement forcé en cas d'erreur\n    }\n  };\n\n  // Format de date relatif\n  const formatDate = dateString => {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffTime = Math.abs(now - date);\n    const diffMinutes = Math.floor(diffTime / (1000 * 60));\n    const diffHours = Math.floor(diffTime / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    if (diffMinutes < 1) return \"À l'instant\";\n    if (diffMinutes < 60) return `Il y a ${diffMinutes} min`;\n    if (diffHours < 24) return `Il y a ${diffHours}h`;\n    if (diffDays < 7) return `Il y a ${diffDays}j`;\n    return date.toLocaleDateString('fr-FR');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-wrapper\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-button\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(Bell, {\n        className: \"notification-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-title\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: markAllAsRead,\n          children: \"Tout marquer comme lu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-empty\",\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-empty\",\n        children: \"Aucune notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-title\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-message\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-time\",\n              children: formatDate(notification.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-actions\",\n            children: [!notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                markAsRead(notification._id);\n              },\n              className: \"notification-action-btn\",\n              title: \"Marquer comme lu\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                deleteNotification(notification._id);\n              },\n              className: \"notification-action-btn\",\n              title: \"Supprimer\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 37\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationCenter, \"KRRpyUkfpsWzKCTiZ6pxBx5COns=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","Bell","Check","Trash2","X","jsxDEV","_jsxDEV","NotificationCenter","_s","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","dropdownRef","loading","setLoading","pollInterval","lastUpdate","setLastUpdate","Date","now","fetchNotifications","showLoading","token","localStorage","getItem","response","get","headers","Authorization","params","timestamp","data","success","error","console","current","setInterval","clearInterval","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","handleClickOutside","event","contains","target","markAsRead","id","put","prevNotifications","map","notif","_id","read","prev","Math","max","markAllAsRead","deleteNotification","filter","delete","formatDate","dateString","date","diffTime","abs","diffMinutes","floor","diffHours","diffDays","toLocaleDateString","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","notification","title","message","createdAt","e","stopPropagation","size","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/NotificationCenter.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { Bell, Check, Trash2, X } from 'lucide-react';\nimport './NotificationCenter.css';\n\nconst NotificationCenter = () => {\n    const [notifications, setNotifications] = useState([]);\n    const [unreadCount, setUnreadCount] = useState(0);\n    const [isOpen, setIsOpen] = useState(false);\n    const dropdownRef = useRef(null);\n    const [loading, setLoading] = useState(false);\n    const pollInterval = useRef(null);\n    const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n    // Fonction optimisée pour récupérer les notifications\n    const fetchNotifications = useCallback(async (showLoading = false) => {\n        try {\n            if (showLoading) setLoading(true);\n            const token = localStorage.getItem('token');\n            if (!token) return;\n\n            const response = await axios.get('http://localhost:5001/api/notifications', {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Cache-Control': 'no-cache',\n                },\n                params: { timestamp: Date.now() } // Évite la mise en cache\n            });\n\n            if (response.data.success) {\n                setNotifications(response.data.notifications);\n                setUnreadCount(response.data.unreadCount);\n                setLastUpdate(Date.now());\n            }\n        } catch (error) {\n            console.error('Erreur lors de la récupération des notifications:', error);\n        } finally {\n            if (showLoading) setLoading(false);\n        }\n    }, []);\n\n    // Initialisation du polling et mise à jour automatique\n    useEffect(() => {\n        fetchNotifications(true); // Premier chargement avec loading\n\n        // Mise à jour toutes les 5 secondes\n        pollInterval.current = setInterval(() => {\n            fetchNotifications(false);\n        }, 5000);\n\n        return () => {\n            if (pollInterval.current) {\n                clearInterval(pollInterval.current);\n            }\n        };\n    }, [fetchNotifications]);\n\n    // Mise à jour lors du retour sur l'onglet\n    useEffect(() => {\n        const handleVisibilityChange = () => {\n            if (document.visibilityState === 'visible') {\n                fetchNotifications(false);\n            }\n        };\n\n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n    }, [fetchNotifications]);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    // Action optimisée pour marquer comme lu\n    const markAsRead = async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.put(`http://localhost:5001/api/notifications/${id}/read`, {}, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            // Mise à jour optimiste de l'UI\n            setNotifications(prevNotifications =>\n                prevNotifications.map(notif =>\n                    notif._id === id ? { ...notif, read: true } : notif\n                )\n            );\n            setUnreadCount(prev => Math.max(0, prev - 1));\n            fetchNotifications(false); // Rafraîchissement en arrière-plan\n        } catch (error) {\n            console.error('Erreur lors du marquage de la notification:', error);\n            fetchNotifications(true); // Rafraîchissement forcé en cas d'erreur\n        }\n    };\n\n    // Action optimisée pour tout marquer comme lu\n    const markAllAsRead = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            await axios.put('http://localhost:5001/api/notifications/read-all', {}, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            // Mise à jour optimiste de l'UI\n            setNotifications(prevNotifications =>\n                prevNotifications.map(notif => ({ ...notif, read: true }))\n            );\n            setUnreadCount(0);\n            fetchNotifications(false); // Rafraîchissement en arrière-plan\n        } catch (error) {\n            console.error('Erreur lors du marquage des notifications:', error);\n            fetchNotifications(true); // Rafraîchissement forcé en cas d'erreur\n        }\n    };\n\n    // Action optimisée pour la suppression\n    const deleteNotification = async (id) => {\n        try {\n            const token = localStorage.getItem('token');\n            // Mise à jour optimiste de l'UI\n            setNotifications(prevNotifications =>\n                prevNotifications.filter(notif => notif._id !== id)\n            );\n            await axios.delete(`http://localhost:5001/api/notifications/${id}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            fetchNotifications(false); // Rafraîchissement en arrière-plan\n        } catch (error) {\n            console.error('Erreur lors de la suppression de la notification:', error);\n            fetchNotifications(true); // Rafraîchissement forcé en cas d'erreur\n        }\n    };\n\n    // Format de date relatif\n    const formatDate = (dateString) => {\n        const now = new Date();\n        const date = new Date(dateString);\n        const diffTime = Math.abs(now - date);\n        const diffMinutes = Math.floor(diffTime / (1000 * 60));\n        const diffHours = Math.floor(diffTime / (1000 * 60 * 60));\n        const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n\n        if (diffMinutes < 1) return \"À l'instant\";\n        if (diffMinutes < 60) return `Il y a ${diffMinutes} min`;\n        if (diffHours < 24) return `Il y a ${diffHours}h`;\n        if (diffDays < 7) return `Il y a ${diffDays}j`;\n\n        return date.toLocaleDateString('fr-FR');\n    };\n\n    return (\n        <div className=\"notifications-wrapper\" ref={dropdownRef}>\n            <button\n                className=\"notification-button\"\n                onClick={() => setIsOpen(!isOpen)}\n                aria-label=\"Notifications\"\n            >\n                <Bell className=\"notification-icon\" />\n                {unreadCount > 0 && (\n                    <div className=\"notification-badge\">\n                        {unreadCount}\n                    </div>\n                )}\n            </button>\n\n            {isOpen && (\n                <div className=\"notifications-container\">\n                    <div className=\"notifications-header\">\n                        <div className=\"notifications-title\">Notifications</div>\n                        {unreadCount > 0 && (\n                            <button\n                                className=\"mark-all-read\"\n                                onClick={markAllAsRead}\n                            >\n                                Tout marquer comme lu\n                            </button>\n                        )}\n                    </div>\n\n                    {loading ? (\n                        <div className=\"notifications-empty\">\n                            Chargement...\n                        </div>\n                    ) : notifications.length === 0 ? (\n                        <div className=\"notifications-empty\">\n                            Aucune notification\n                        </div>\n                    ) : (\n                        <div className=\"notifications-list\">\n                            {notifications.map(notification => (\n                                <div\n                                    key={notification._id}\n                                    className={`notification-item ${!notification.read ? 'unread' : ''}`}\n                                >\n                                    <div className=\"notification-content\">\n                                        <div className=\"notification-title\">\n                                            {notification.title}\n                                        </div>\n                                        <div className=\"notification-message\">\n                                            {notification.message}\n                                        </div>\n                                        <div className=\"notification-time\">\n                                            {formatDate(notification.createdAt)}\n                                        </div>\n                                    </div>\n                                    <div className=\"notification-actions\">\n                                        {!notification.read && (\n                                            <button\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    markAsRead(notification._id);\n                                                }}\n                                                className=\"notification-action-btn\"\n                                                title=\"Marquer comme lu\"\n                                            >\n                                                <Check size={16} />\n                                            </button>\n                                        )}\n                                        <button\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                                deleteNotification(notification._id);\n                                            }}\n                                            className=\"notification-action-btn\"\n                                            title=\"Supprimer\"\n                                        >\n                                            <Trash2 size={16} />\n                                        </button>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NotificationCenter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}