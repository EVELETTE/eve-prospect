{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js\",\n  _s = $RefreshSig$();\n// ProspectListWidget.js\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport { Search, RefreshCw, Clock, Upload, Trash2, Plus, Edit2, List, XCircle } from 'lucide-react';\nimport './ProspectListWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 50;\nconst LOAD_LIMIT = 50; // Nombre d'éléments chargés avant d'attendre\nconst REFRESH_INTERVAL = 10000; // 10 secondes\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst ProspectListWidget = ({\n  prospects: initialProspects,\n  onProspectsUpdate\n}) => {\n  _s();\n  // ======= SECTION 1: ÉTATS =======\n  const [selectedProspects, setSelectedProspects] = useState([]);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [showCreateListModal, setShowCreateListModal] = useState(false);\n  const [showEditListModal, setShowEditListModal] = useState(false);\n  const [showAddToListModal, setShowAddToListModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [displayedProspects, setDisplayedProspects] = useState([]);\n  const [allProspects, setAllProspects] = useState(initialProspects || []);\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [currentList, setCurrentList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [editListName, setEditListName] = useState('');\n  const [listSearchTerm, setListSearchTerm] = useState('');\n  const [lastUpdateTime, setLastUpdateTime] = useState(Date.now());\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [autoRefreshEnabled, setAutoRefreshEnabled] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n\n  // ======= SECTION 2: MEMOS ET CALCULS =======\n  // Ces memos DOIVENT être déclarés AVANT les fonctions qui les utilisent\n  const filteredLists = useMemo(() => lists.filter(list => list.name.toLowerCase().includes(listSearchTerm.toLowerCase())), [lists, listSearchTerm]);\n  const filteredProspects = useMemo(() => {\n    if (!searchTerm) return allProspects;\n    const searchTermLower = searchTerm.toLowerCase();\n    return allProspects.filter(prospect => {\n      const searchFields = [prospect.nom, prospect.prenom, prospect.email, prospect.societe].map(field => String(field || '').toLowerCase());\n      return searchFields.some(field => field.includes(searchTermLower));\n    });\n  }, [allProspects, searchTerm]);\n\n  // ======= SECTION 3: FONCTIONS UTILITAIRES =======\n  const debouncedSearch = useCallback(debounce(value => {\n    setSearchTerm(value);\n  }, 300), []);\n  const handleError = useCallback((error, message) => {\n    var _error$response, _error$response$data;\n    console.error(message, error);\n    setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || message);\n    setTimeout(() => setError(''), 3000);\n  }, []);\n  const handleSelectProspect = useCallback(id => {\n    setSelectedProspects(prev => prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]);\n  }, []);\n  // ======= SECTION 4: FONCTIONS API =======\n  const fetchLists = useCallback(async () => {\n    try {\n      const response = await api.get('/lists');\n      if (response.data.success) {\n        setLists(response.data.lists);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des listes de prospects\");\n    }\n  }, [handleError]);\n  const fetchProspects = useCallback(async (isAutoRefresh = false) => {\n    if (isAutoRefresh && !autoRefreshEnabled) return;\n    try {\n      if (!isAutoRefresh) setLoading(true);\n      setIsRefreshing(true);\n      let response;\n      if (selectedList) {\n        response = await api.get(`/lists/${selectedList}`);\n        if (response.data.success) {\n          const prospects = response.data.list.prospects;\n          if (JSON.stringify(prospects) !== JSON.stringify(allProspects)) {\n            setAllProspects(prospects);\n            onProspectsUpdate(prospects);\n            setLastUpdateTime(Date.now());\n          }\n        }\n      } else {\n        response = await api.get('/prospects');\n        if (response.data.success) {\n          if (JSON.stringify(response.data.prospects) !== JSON.stringify(allProspects)) {\n            setAllProspects(response.data.prospects);\n            onProspectsUpdate(response.data.prospects);\n            setLastUpdateTime(Date.now());\n          }\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors du chargement des prospects\");\n    } finally {\n      setLoading(false);\n      setIsRefreshing(false);\n    }\n  }, [selectedList, handleError, onProspectsUpdate, allProspects, autoRefreshEnabled]);\n\n  // ======= SECTION 5: GESTION DU SCROLL INFINI =======\n  const loadMoreProspects = useCallback(async () => {\n    const startIndex = displayedProspects.length;\n    if (startIndex >= filteredProspects.length) {\n      setHasMore(false);\n      return;\n    }\n    setLoadingMore(true);\n    try {\n      // Charge les prospects en lot de 20\n      const newProspects = filteredProspects.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n      setDisplayedProspects(prev => [...prev, ...newProspects]);\n\n      // Vérifie si la limite de 100 est atteinte\n      const loadedCount = startIndex + ITEMS_PER_PAGE;\n      if (loadedCount % LOAD_LIMIT === 0) {\n        console.log(`Chargé ${loadedCount} prospects, en attente avant de continuer...`);\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Attente de 2 secondes\n      }\n      setHasMore(loadedCount < filteredProspects.length);\n    } finally {\n      setLoadingMore(false);\n    }\n  }, [displayedProspects.length, filteredProspects]);\n  const handleScroll = useCallback(e => {\n    if (!hasMore || loadingMore) return;\n    const element = e.target;\n    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n      loadMoreProspects();\n    }\n  }, [hasMore, loadingMore, loadMoreProspects]);\n  useEffect(() => {\n    const initialLoad = filteredProspects.slice(0, ITEMS_PER_PAGE);\n    setDisplayedProspects(initialLoad);\n    setHasMore(filteredProspects.length > ITEMS_PER_PAGE);\n  }, [filteredProspects]);\n  // ======= SECTION 6: GESTION DES PROSPECTS =======\n  const handleFileUpload = async data => {\n    try {\n      setLoading(true);\n      const formattedProspects = data.map(row => ({\n        prenom: row[0] || 'Non disponible',\n        nom: row[1] || 'Non disponible',\n        email: row[2] || 'Non disponible',\n        societe: row[3] || 'Non disponible',\n        linkedin: row[4] || 'Non disponible'\n      }));\n      await Promise.all(formattedProspects.map(prospect => api.post('/prospects/add', prospect)));\n      await fetchProspects();\n      setShowImportModal(false);\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'import des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteSelected = async () => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer les prospects sélectionnés ?')) {\n      return;\n    }\n    try {\n      setLoading(true);\n      await Promise.all(selectedProspects.map(id => api.delete(`/prospects/${id}`)));\n      await fetchProspects();\n      setSelectedProspects([]);\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression des prospects\");\n    } finally {\n      setLoading(false);\n    }\n  }; // ======= SECTION 7: GESTION DES LISTES =======\n  const createNewList = async e => {\n    e.preventDefault();\n    if (newListName.trim() === '') return;\n    try {\n      setLoading(true);\n      const response = await api.post('/lists', {\n        name: newListName\n      });\n      if (response.data.success) {\n        setLists(prev => [...prev, response.data.list]);\n        setNewListName('');\n        setShowCreateListModal(false);\n        setError('');\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la création de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditList = async e => {\n    e.preventDefault();\n    if (!editListName.trim() || !currentList) return;\n    try {\n      setLoading(true);\n      const response = await api.put(`/lists/${currentList._id}`, {\n        name: editListName\n      });\n      if (response.data.success) {\n        setLists(prev => prev.map(list => list._id === currentList._id ? {\n          ...list,\n          name: editListName\n        } : list));\n        setShowEditListModal(false);\n        setEditListName('');\n        setCurrentList(null);\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la modification de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteList = async listId => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n    try {\n      setLoading(true);\n      const response = await api.delete(`/lists/${listId}`);\n      if (response.data.success) {\n        setLists(prev => prev.filter(list => list._id !== listId));\n        if (selectedList === listId) {\n          setSelectedList(null);\n          await fetchProspects();\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de la suppression de la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddProspectsToList = async listId => {\n    try {\n      setLoading(true);\n      const response = await api.post(`/lists/${listId}/prospects`, {\n        prospectIds: selectedProspects\n      });\n      if (response.data.success) {\n        await fetchLists();\n        setShowAddToListModal(false);\n        setSelectedProspects([]);\n        if (selectedList === listId) {\n          await fetchProspects();\n        }\n      }\n    } catch (error) {\n      handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ======= SECTION 8: EFFETS =======\n  useEffect(() => {\n    if (!loading && !loadingMore) {\n      const filtered = filteredProspects.slice(0, ITEMS_PER_PAGE);\n      setDisplayedProspects(filtered);\n      setHasMore(filteredProspects.length > ITEMS_PER_PAGE);\n    }\n  }, [filteredProspects, loading, loadingMore]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetchProspects(true);\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(intervalId);\n  }, [fetchProspects]);\n  useEffect(() => {\n    fetchLists();\n  }, [fetchLists]);\n  useEffect(() => {\n    fetchProspects();\n  }, [fetchProspects, selectedList]);\n\n  // ======= SECTION 9: RENDU DU COMPOSANT =======\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prospect-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-update\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), \"Derni\\xE8re mise \\xE0 jour: \", new Date(lastUpdateTime).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `refresh-toggle ${autoRefreshEnabled ? 'enabled' : ''}`,\n          onClick: () => setAutoRefreshEnabled(!autoRefreshEnabled),\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: `w-4 h-4 ${isRefreshing ? 'animate-spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), autoRefreshEnabled ? 'Désactiver' : 'Activer', \" l'actualisation auto\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"manual-refresh\",\n          onClick: () => fetchProspects(),\n          disabled: loading || isRefreshing,\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), \"Actualiser maintenant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Listes de Prospects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher une liste...\",\n        value: listSearchTerm,\n        onChange: e => setListSearchTerm(e.target.value),\n        className: \"list-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-names\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setSelectedList(null);\n            fetchProspects();\n          },\n          className: `list-item ${!selectedList ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: \"Tous les prospects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", allProspects.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-item ${selectedList === list._id ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item-content\",\n            onClick: () => {\n              setSelectedList(list._id);\n              fetchProspects();\n            },\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-name\",\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-count\",\n              children: [\"(\", list.prospectsCount || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button edit\",\n              onClick: e => {\n                e.stopPropagation();\n                setCurrentList(list);\n                setEditListName(list.name);\n                setShowEditListModal(true);\n              },\n              children: /*#__PURE__*/_jsxDEV(Edit2, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button delete\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteList(list._id);\n              },\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this)]\n        }, list._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateListModal(true),\n        className: \"btn add-list-btn\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }, this), \"Cr\\xE9er une liste\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prospect-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(true),\n          className: \"btn import-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Upload, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this), \"Importer des prospects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteSelected,\n          className: `btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`,\n          disabled: loading || selectedProspects.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(Trash2, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this), \"Supprimer les prospects s\\xE9lectionn\\xE9s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this), selectedProspects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddToListModal(true),\n          className: \"btn add-to-list-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }, this), \"Ajouter \\xE0 une liste\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-input\",\n            placeholder: \"Rechercher un prospect...\",\n            onChange: e => debouncedSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search\",\n            onClick: () => setSearchTerm(''),\n            children: /*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `prospect-content ${showImportModal ? 'dimmed' : ''}`,\n        onScroll: handleScroll,\n        children: loading && !isRefreshing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prospect-table-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"prospect-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: displayedProspects.length > 0 && displayedProspects.every(prospect => selectedProspects.includes(prospect._id)),\n                    onChange: () => {\n                      const currentIds = displayedProspects.map(p => p._id);\n                      const allSelected = currentIds.every(id => selectedProspects.includes(id));\n                      if (allSelected) {\n                        setSelectedProspects(prev => prev.filter(id => !currentIds.includes(id)));\n                      } else {\n                        setSelectedProspects(prev => [...new Set([...prev, ...currentIds])]);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Soci\\xE9t\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"LinkedIn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedProspects.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  className: \"no-results\",\n                  children: \"Aucun prospect trouv\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 37\n              }, this) : displayedProspects.map(prospect => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedProspects.includes(prospect._id),\n                    onChange: () => handleSelectProspect(prospect._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`,\n                    alt: `${prospect.prenom} ${prospect.nom}`,\n                    className: \"prospect-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [prospect.prenom, \" \", prospect.nom]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.email || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prospect.societe || 'Non disponible'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: prospect.linkedin,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"linkedin-btn\",\n                    children: \"qxprofil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 45\n                }, this)]\n              }, prospect._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 29\n          }, this), loadingMore && hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-more\",\n            children: \"Chargement en cours...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          onFileLoaded: handleFileUpload,\n          cssClass: \"csv-reader-input\",\n          label: \"Importer une liste CSV\",\n          parserOptions: {\n            header: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowImportModal(false),\n            className: \"btn cancel-btn\",\n            disabled: loading,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 17\n    }, this), showCreateListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cr\\xE9er une nouvelle liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createNewList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: newListName,\n              onChange: e => setNewListName(e.target.value),\n              className: \"new-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !newListName.trim() || loading,\n              children: loading ? 'Création...' : 'Créer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowCreateListModal(false);\n                setNewListName('');\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 17\n    }, this), showEditListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier la liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nom de la liste\",\n              value: editListName,\n              onChange: e => setEditListName(e.target.value),\n              className: \"edit-list-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn save-btn\",\n              disabled: !editListName.trim() || loading,\n              children: loading ? 'Modification...' : 'Modifier'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n                setError('');\n              },\n              className: \"btn cancel-btn\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 17\n    }, this), showAddToListModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajouter \\xE0 une liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lists-selection\",\n            children: filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddProspectsToList(list._id),\n              className: \"list-selection-btn\",\n              disabled: loading,\n              children: list.name\n            }, list._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddToListModal(false),\n            className: \"btn cancel-btn\",\n            disabled: loading,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 9\n  }, this);\n};\n_s(ProspectListWidget, \"cnT49BxkSrwTLp1rdGtxpiF48hU=\");\n_c = ProspectListWidget;\nexport default ProspectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ProspectListWidget\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","CSVReader","axios","debounce","Search","RefreshCw","Clock","Upload","Trash2","Plus","Edit2","List","XCircle","jsxDEV","_jsxDEV","API_BASE_URL","ITEMS_PER_PAGE","LOAD_LIMIT","REFRESH_INTERVAL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","ProspectListWidget","prospects","initialProspects","onProspectsUpdate","_s","selectedProspects","setSelectedProspects","showImportModal","setShowImportModal","showCreateListModal","setShowCreateListModal","showEditListModal","setShowEditListModal","showAddToListModal","setShowAddToListModal","searchTerm","setSearchTerm","error","setError","loading","setLoading","loadingMore","setLoadingMore","displayedProspects","setDisplayedProspects","allProspects","setAllProspects","lists","setLists","selectedList","setSelectedList","currentList","setCurrentList","newListName","setNewListName","editListName","setEditListName","listSearchTerm","setListSearchTerm","lastUpdateTime","setLastUpdateTime","Date","now","isRefreshing","setIsRefreshing","autoRefreshEnabled","setAutoRefreshEnabled","hasMore","setHasMore","filteredLists","filter","list","name","toLowerCase","includes","filteredProspects","searchTermLower","prospect","searchFields","nom","prenom","email","societe","map","field","String","some","debouncedSearch","value","handleError","message","_error$response","_error$response$data","console","response","data","setTimeout","handleSelectProspect","id","prev","prospectId","fetchLists","get","success","fetchProspects","isAutoRefresh","JSON","stringify","loadMoreProspects","startIndex","length","newProspects","slice","loadedCount","log","Promise","resolve","handleScroll","e","element","target","scrollHeight","scrollTop","clientHeight","initialLoad","handleFileUpload","formattedProspects","row","linkedin","all","post","handleDeleteSelected","window","confirm","delete","createNewList","preventDefault","trim","handleEditList","put","_id","handleDeleteList","listId","handleAddProspectsToList","prospectIds","filtered","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","onClick","disabled","type","placeholder","onChange","prospectsCount","stopPropagation","onScroll","checked","every","currentIds","p","allSelected","Set","colSpan","src","alt","href","rel","onFileLoaded","cssClass","label","parserOptions","header","onSubmit","autoFocus","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js"],"sourcesContent":["// ProspectListWidget.js\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport debounce from 'lodash/debounce';\nimport { Search, RefreshCw, Clock, Upload, Trash2, Plus, Edit2, List, XCircle } from 'lucide-react';\nimport './ProspectListWidget.css';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\nconst ITEMS_PER_PAGE = 50;\nconst LOAD_LIMIT = 50;    // Nombre d'éléments chargés avant d'attendre\nconst REFRESH_INTERVAL = 10000; // 10 secondes\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nconst ProspectListWidget = ({ prospects: initialProspects, onProspectsUpdate }) => {\n    // ======= SECTION 1: ÉTATS =======\n    const [selectedProspects, setSelectedProspects] = useState([]);\n    const [showImportModal, setShowImportModal] = useState(false);\n    const [showCreateListModal, setShowCreateListModal] = useState(false);\n    const [showEditListModal, setShowEditListModal] = useState(false);\n    const [showAddToListModal, setShowAddToListModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [displayedProspects, setDisplayedProspects] = useState([]);\n    const [allProspects, setAllProspects] = useState(initialProspects || []);\n    const [lists, setLists] = useState([]);\n    const [selectedList, setSelectedList] = useState(null);\n    const [currentList, setCurrentList] = useState(null);\n    const [newListName, setNewListName] = useState('');\n    const [editListName, setEditListName] = useState('');\n    const [listSearchTerm, setListSearchTerm] = useState('');\n    const [lastUpdateTime, setLastUpdateTime] = useState(Date.now());\n    const [isRefreshing, setIsRefreshing] = useState(false);\n    const [autoRefreshEnabled, setAutoRefreshEnabled] = useState(true);\n    const [hasMore, setHasMore] = useState(true);\n\n    // ======= SECTION 2: MEMOS ET CALCULS =======\n    // Ces memos DOIVENT être déclarés AVANT les fonctions qui les utilisent\n    const filteredLists = useMemo(() =>\n            lists.filter(list =>\n                list.name.toLowerCase().includes(listSearchTerm.toLowerCase())\n            ),\n        [lists, listSearchTerm]);\n\n    const filteredProspects = useMemo(() => {\n        if (!searchTerm) return allProspects;\n\n        const searchTermLower = searchTerm.toLowerCase();\n        return allProspects.filter(prospect => {\n            const searchFields = [\n                prospect.nom,\n                prospect.prenom,\n                prospect.email,\n                prospect.societe\n            ].map(field => String(field || '').toLowerCase());\n\n            return searchFields.some(field => field.includes(searchTermLower));\n        });\n    }, [allProspects, searchTerm]);\n\n    // ======= SECTION 3: FONCTIONS UTILITAIRES =======\n    const debouncedSearch = useCallback(\n        debounce((value) => {\n            setSearchTerm(value);\n        }, 300),\n        []\n    );\n\n    const handleError = useCallback((error, message) => {\n        console.error(message, error);\n        setError(error.response?.data?.message || message);\n        setTimeout(() => setError(''), 3000);\n    }, []);\n\n    const handleSelectProspect = useCallback((id) => {\n        setSelectedProspects(prev =>\n            prev.includes(id)\n                ? prev.filter(prospectId => prospectId !== id)\n                : [...prev, id]\n        );\n    }, []);\n// ======= SECTION 4: FONCTIONS API =======\n    const fetchLists = useCallback(async () => {\n        try {\n            const response = await api.get('/lists');\n            if (response.data.success) {\n                setLists(response.data.lists);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des listes de prospects\");\n        }\n    }, [handleError]);\n\n    const fetchProspects = useCallback(async (isAutoRefresh = false) => {\n        if (isAutoRefresh && !autoRefreshEnabled) return;\n\n        try {\n            if (!isAutoRefresh) setLoading(true);\n            setIsRefreshing(true);\n\n            let response;\n            if (selectedList) {\n                response = await api.get(`/lists/${selectedList}`);\n                if (response.data.success) {\n                    const prospects = response.data.list.prospects;\n                    if (JSON.stringify(prospects) !== JSON.stringify(allProspects)) {\n                        setAllProspects(prospects);\n                        onProspectsUpdate(prospects);\n                        setLastUpdateTime(Date.now());\n                    }\n                }\n            } else {\n                response = await api.get('/prospects');\n                if (response.data.success) {\n                    if (JSON.stringify(response.data.prospects) !== JSON.stringify(allProspects)) {\n                        setAllProspects(response.data.prospects);\n                        onProspectsUpdate(response.data.prospects);\n                        setLastUpdateTime(Date.now());\n                    }\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors du chargement des prospects\");\n        } finally {\n            setLoading(false);\n            setIsRefreshing(false);\n        }\n    }, [selectedList, handleError, onProspectsUpdate, allProspects, autoRefreshEnabled]);\n\n    // ======= SECTION 5: GESTION DU SCROLL INFINI =======\n    const loadMoreProspects = useCallback(async () => {\n        const startIndex = displayedProspects.length;\n\n        if (startIndex >= filteredProspects.length) {\n            setHasMore(false);\n            return;\n        }\n\n        setLoadingMore(true);\n        try {\n            // Charge les prospects en lot de 20\n            const newProspects = filteredProspects.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n            setDisplayedProspects(prev => [...prev, ...newProspects]);\n\n            // Vérifie si la limite de 100 est atteinte\n            const loadedCount = startIndex + ITEMS_PER_PAGE;\n            if (loadedCount % LOAD_LIMIT === 0) {\n                console.log(`Chargé ${loadedCount} prospects, en attente avant de continuer...`);\n                await new Promise(resolve => setTimeout(resolve, 2000)); // Attente de 2 secondes\n            }\n\n            setHasMore(loadedCount < filteredProspects.length);\n        } finally {\n            setLoadingMore(false);\n        }\n    }, [displayedProspects.length, filteredProspects]);\n\n    const handleScroll = useCallback((e) => {\n        if (!hasMore || loadingMore) return;\n\n        const element = e.target;\n        if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n            loadMoreProspects();\n        }\n    }, [hasMore, loadingMore, loadMoreProspects]);\n\n    useEffect(() => {\n        const initialLoad = filteredProspects.slice(0, ITEMS_PER_PAGE);\n        setDisplayedProspects(initialLoad);\n        setHasMore(filteredProspects.length > ITEMS_PER_PAGE);\n    }, [filteredProspects]);\n    // ======= SECTION 6: GESTION DES PROSPECTS =======\n    const handleFileUpload = async (data) => {\n        try {\n            setLoading(true);\n            const formattedProspects = data.map(row => ({\n                prenom: row[0] || 'Non disponible',\n                nom: row[1] || 'Non disponible',\n                email: row[2] || 'Non disponible',\n                societe: row[3] || 'Non disponible',\n                linkedin: row[4] || 'Non disponible'\n            }));\n\n            await Promise.all(\n                formattedProspects.map(prospect =>\n                    api.post('/prospects/add', prospect)\n                )\n            );\n\n            await fetchProspects();\n            setShowImportModal(false);\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'import des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteSelected = async () => {\n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer les prospects sélectionnés ?')) {\n            return;\n        }\n\n        try {\n            setLoading(true);\n            await Promise.all(\n                selectedProspects.map(id =>\n                    api.delete(`/prospects/${id}`)\n                )\n            );\n\n            await fetchProspects();\n            setSelectedProspects([]);\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression des prospects\");\n        } finally {\n            setLoading(false);\n        }\n    };// ======= SECTION 7: GESTION DES LISTES =======\n    const createNewList = async (e) => {\n        e.preventDefault();\n        if (newListName.trim() === '') return;\n\n        try {\n            setLoading(true);\n            const response = await api.post('/lists', { name: newListName });\n            if (response.data.success) {\n                setLists(prev => [...prev, response.data.list]);\n                setNewListName('');\n                setShowCreateListModal(false);\n                setError('');\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la création de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleEditList = async (e) => {\n        e.preventDefault();\n        if (!editListName.trim() || !currentList) return;\n\n        try {\n            setLoading(true);\n            const response = await api.put(`/lists/${currentList._id}`, {\n                name: editListName\n            });\n\n            if (response.data.success) {\n                setLists(prev => prev.map(list =>\n                    list._id === currentList._id\n                        ? { ...list, name: editListName }\n                        : list\n                ));\n                setShowEditListModal(false);\n                setEditListName('');\n                setCurrentList(null);\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la modification de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeleteList = async (listId) => {\n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette liste ?')) return;\n\n        try {\n            setLoading(true);\n            const response = await api.delete(`/lists/${listId}`);\n\n            if (response.data.success) {\n                setLists(prev => prev.filter(list => list._id !== listId));\n                if (selectedList === listId) {\n                    setSelectedList(null);\n                    await fetchProspects();\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de la suppression de la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleAddProspectsToList = async (listId) => {\n        try {\n            setLoading(true);\n            const response = await api.post(`/lists/${listId}/prospects`, {\n                prospectIds: selectedProspects\n            });\n\n            if (response.data.success) {\n                await fetchLists();\n                setShowAddToListModal(false);\n                setSelectedProspects([]);\n                if (selectedList === listId) {\n                    await fetchProspects();\n                }\n            }\n        } catch (error) {\n            handleError(error, \"Erreur lors de l'ajout des prospects à la liste\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // ======= SECTION 8: EFFETS =======\n    useEffect(() => {\n        if (!loading && !loadingMore) {\n            const filtered = filteredProspects.slice(0, ITEMS_PER_PAGE);\n            setDisplayedProspects(filtered);\n            setHasMore(filteredProspects.length > ITEMS_PER_PAGE);\n        }\n    }, [filteredProspects, loading, loadingMore]);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            fetchProspects(true);\n        }, REFRESH_INTERVAL);\n\n        return () => clearInterval(intervalId);\n    }, [fetchProspects]);\n\n    useEffect(() => {\n        fetchLists();\n    }, [fetchLists]);\n\n    useEffect(() => {\n        fetchProspects();\n    }, [fetchProspects, selectedList]);\n\n    // ======= SECTION 9: RENDU DU COMPOSANT =======\n    return (\n        <div className=\"prospect-list-widget\">\n            <div className=\"list-header\">\n                <div className=\"refresh-controls\">\n                    <div className=\"last-update\">\n                        <Clock className=\"w-4 h-4\" />\n                        Dernière mise à jour: {new Date(lastUpdateTime).toLocaleTimeString()}\n                    </div>\n                    <button\n                        className={`refresh-toggle ${autoRefreshEnabled ? 'enabled' : ''}`}\n                        onClick={() => setAutoRefreshEnabled(!autoRefreshEnabled)}\n                    >\n                        <RefreshCw className={`w-4 h-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n                        {autoRefreshEnabled ? 'Désactiver' : 'Activer'} l'actualisation auto\n                    </button>\n                    <button\n                        className=\"manual-refresh\"\n                        onClick={() => fetchProspects()}\n                        disabled={loading || isRefreshing}\n                    >\n                        <RefreshCw className=\"w-4 h-4\" />\n                        Actualiser maintenant\n                    </button>\n                </div>\n            </div>\n            <div className=\"list-sidebar\">\n                <h3>Listes de Prospects</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Rechercher une liste...\"\n                    value={listSearchTerm}\n                    onChange={(e) => setListSearchTerm(e.target.value)}\n                    className=\"list-search-input\"\n                />\n                <ul className=\"list-names\">\n                    <li\n                        onClick={() => {\n                            setSelectedList(null);\n                            fetchProspects();\n                        }}\n                        className={`list-item ${!selectedList ? 'active' : ''}`}\n                    >\n                        <div className=\"list-item-content\">\n                            <List className=\"w-4 h-4\" />\n                            <span className=\"list-name\">Tous les prospects</span>\n                            <span className=\"list-count\">({allProspects.length})</span>\n                        </div>\n                    </li>\n                    {filteredLists.map(list => (\n                        <li\n                            key={list._id}\n                            className={`list-item ${selectedList === list._id ? 'active' : ''}`}\n                        >\n                            <div\n                                className=\"list-item-content\"\n                                onClick={() => {\n                                    setSelectedList(list._id);\n                                    fetchProspects();\n                                }}\n                            >\n                                <List className=\"w-4 h-4\" />\n                                <span className=\"list-name\">{list.name}</span>\n                                <span className=\"list-count\">\n                                    ({list.prospectsCount || 0})\n                                </span>\n                            </div>\n                            <div className=\"list-actions\">\n                                <button\n                                    className=\"icon-button edit\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        setCurrentList(list);\n                                        setEditListName(list.name);\n                                        setShowEditListModal(true);\n                                    }}\n                                >\n                                    <Edit2 className=\"w-4 h-4\" />\n                                </button>\n                                <button\n                                    className=\"icon-button delete\"\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleDeleteList(list._id);\n                                    }}\n                                >\n                                    <Trash2 className=\"w-4 h-4\" />\n                                </button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n                <button\n                    onClick={() => setShowCreateListModal(true)}\n                    className=\"btn add-list-btn\"\n                >\n                    <Plus className=\"w-4 h-4\" />\n                    Créer une liste\n                </button>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"prospect-actions\">\n                    <button onClick={() => setShowImportModal(true)} className=\"btn import-btn\">\n                        <Upload className=\"w-4 h-4\" />\n                        Importer des prospects\n                    </button>\n                    <button\n                        onClick={handleDeleteSelected}\n                        className={`btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`}\n                        disabled={loading || selectedProspects.length === 0}\n                    >\n                        <Trash2 className=\"w-4 h-4\" />\n                        Supprimer les prospects sélectionnés\n                    </button>\n                    {selectedProspects.length > 0 && (\n                        <button\n                            onClick={() => setShowAddToListModal(true)}\n                            className=\"btn add-to-list-btn\"\n                        >\n                            <Plus className=\"w-4 h-4\" />\n                            Ajouter à une liste\n                        </button>\n                    )}\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            className=\"search-input\"\n                            placeholder=\"Rechercher un prospect...\"\n                            onChange={(e) => debouncedSearch(e.target.value)}\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"clear-search\"\n                                onClick={() => setSearchTerm('')}\n                            >\n                                <XCircle className=\"w-4 h-4\" />\n                            </button>\n                        )}\n                    </div>\n                </div>\n\n                <div\n                    className={`prospect-content ${showImportModal ? 'dimmed' : ''}`}\n                    onScroll={handleScroll}\n                >\n                    {loading && !isRefreshing ? (\n                        <div className=\"loading\">Chargement...</div>\n                    ) : (\n                        <div className=\"prospect-table-container\">\n                            <table className=\"prospect-table\">\n                                <thead>\n                                <tr>\n                                    <th>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={displayedProspects.length > 0 &&\n                                                displayedProspects.every(prospect =>\n                                                    selectedProspects.includes(prospect._id)\n                                                )}\n                                            onChange={() => {\n                                                const currentIds = displayedProspects.map(p => p._id);\n                                                const allSelected = currentIds.every(id =>\n                                                    selectedProspects.includes(id)\n                                                );\n                                                if (allSelected) {\n                                                    setSelectedProspects(prev =>\n                                                        prev.filter(id => !currentIds.includes(id))\n                                                    );\n                                                } else {\n                                                    setSelectedProspects(prev =>\n                                                        [...new Set([...prev, ...currentIds])]\n                                                    );\n                                                }\n                                            }}\n                                        />\n                                    </th>\n                                    <th>Photo</th>\n                                    <th>Nom</th>\n                                    <th>Email</th>\n                                    <th>Société</th>\n                                    <th>LinkedIn</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {displayedProspects.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"6\" className=\"no-results\">\n                                            Aucun prospect trouvé\n                                        </td>\n                                    </tr>\n                                ) : (\n                                    displayedProspects.map((prospect) => (\n                                        <tr key={prospect._id}>\n                                            <td>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={selectedProspects.includes(prospect._id)}\n                                                    onChange={() => handleSelectProspect(prospect._id)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <img\n                                                    src={`https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`}\n                                                    alt={`${prospect.prenom} ${prospect.nom}`}\n                                                    className=\"prospect-avatar\"\n                                                />\n                                            </td>\n                                            <td>{prospect.prenom} {prospect.nom}</td>\n                                            <td>{prospect.email || 'Non disponible'}</td>\n                                            <td>{prospect.societe || 'Non disponible'}</td>\n                                            <td>\n                                                <a\n                                                    href={prospect.linkedin}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"linkedin-btn\"\n                                                >\n                                                    qxprofil\n                                                </a>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                                </tbody>\n                            </table>\n                            {loadingMore && hasMore && (\n                                <div className=\"loading-more\">\n                                    Chargement en cours...\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Modals */}\n            {showImportModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Importer des prospects</h3>\n                        <CSVReader\n                            onFileLoaded={handleFileUpload}\n                            cssClass=\"csv-reader-input\"\n                            label=\"Importer une liste CSV\"\n                            parserOptions={{ header: false }}\n                        />\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowImportModal(false)}\n                                className=\"btn cancel-btn\"\n                                disabled={loading}\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n                </div>\n            )}\n\n            {showCreateListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Créer une nouvelle liste</h3>\n                        <form onSubmit={createNewList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={newListName}\n                                    onChange={(e) => setNewListName(e.target.value)}\n                                    className=\"new-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!newListName.trim() || loading}\n                                >\n                                    {loading ? 'Création...' : 'Créer'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowCreateListModal(false);\n                                        setNewListName('');\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {showEditListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Modifier la liste</h3>\n                        <form onSubmit={handleEditList}>\n                            <div className=\"modal-body\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Nom de la liste\"\n                                    value={editListName}\n                                    onChange={(e) => setEditListName(e.target.value)}\n                                    className=\"edit-list-input\"\n                                    autoFocus\n                                />\n                                {error && <p className=\"error-message\">{error}</p>}\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn save-btn\"\n                                    disabled={!editListName.trim() || loading}\n                                >\n                                    {loading ? 'Modification...' : 'Modifier'}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        setShowEditListModal(false);\n                                        setEditListName('');\n                                        setCurrentList(null);\n                                        setError('');\n                                    }}\n                                    className=\"btn cancel-btn\"\n                                >\n                                    Annuler\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )}\n\n            {showAddToListModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Ajouter à une liste</h3>\n                        <div className=\"modal-body\">\n                            <div className=\"lists-selection\">\n                                {filteredLists.map(list => (\n                                    <button\n                                        key={list._id}\n                                        onClick={() => handleAddProspectsToList(list._id)}\n                                        className=\"list-selection-btn\"\n                                        disabled={loading}\n                                    >\n                                        {list.name}\n                                    </button>\n                                ))}\n                            </div>\n                            {error && <p className=\"error-message\">{error}</p>}\n                        </div>\n                        <div className=\"modal-actions\">\n                            <button\n                                onClick={() => setShowAddToListModal(false)}\n                                className=\"btn cancel-btn\"\n                                disabled={loading}\n                            >\n                                Fermer\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProspectListWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}