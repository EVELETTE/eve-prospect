{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport './ProspectListWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProspectListWidget = ({\n  prospects,\n  onProspectsUpdate\n}) => {\n  _s();\n  const [selectedProspects, setSelectedProspects] = useState([]);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [displayedProspects, setDisplayedProspects] = useState([]);\n  const [itemsPerPage] = useState(5);\n\n  // État pour gérer les listes de prospects\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n\n  // Charger les prospects par lots\n  const loadMoreProspects = () => {\n    const startIndex = displayedProspects.length;\n    const filteredProspects = prospects.filter(prospect => {\n      var _prospect$nom, _prospect$prenom, _prospect$societe;\n      return ((_prospect$nom = prospect.nom) === null || _prospect$nom === void 0 ? void 0 : _prospect$nom.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$prenom = prospect.prenom) === null || _prospect$prenom === void 0 ? void 0 : _prospect$prenom.toLowerCase().includes(searchTerm.toLowerCase())) || ((_prospect$societe = prospect.societe) === null || _prospect$societe === void 0 ? void 0 : _prospect$societe.toLowerCase().includes(searchTerm.toLowerCase()));\n    });\n    const newProspects = filteredProspects.slice(startIndex, startIndex + itemsPerPage);\n    setDisplayedProspects(prev => [...prev, ...newProspects]);\n  };\n  useEffect(() => {\n    // Charger les listes de prospects\n    const fetchLists = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5001/api/lists', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setLists(response.data.lists);\n        if (response.data.lists.length > 0) {\n          setSelectedList(response.data.lists[0]._id);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des listes de prospects:\", error);\n      }\n    };\n    fetchLists();\n  }, []);\n  useEffect(() => {\n    const fetchProspectsByList = async () => {\n      try {\n        if (selectedList) {\n          const token = localStorage.getItem('token');\n          const response = await axios.get(`http://localhost:5001/api/prospects/${selectedList}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          onProspectsUpdate(response.data.prospects);\n          setDisplayedProspects(response.data.prospects.slice(0, itemsPerPage));\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des prospects par liste:\", error);\n      }\n    };\n    fetchProspectsByList();\n  }, [selectedList]);\n\n  // Créer une nouvelle liste\n  const createNewList = async () => {\n    if (newListName.trim() === '') return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5001/api/lists', {\n        name: newListName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setLists([...lists, response.data.list]);\n      setNewListName('');\n    } catch (error) {\n      console.error(\"Erreur lors de la création d'une nouvelle liste:\", error);\n    }\n  };\n  const handleFileUpload = async data => {\n    // Votre code pour gérer l'importation\n  };\n  const handleDeleteSelected = async () => {\n    // Votre code pour supprimer les prospects sélectionnés\n  };\n  const handleSelectProspect = id => {\n    setSelectedProspects(prev => prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]);\n  };\n  const handleSelectAll = () => {\n    const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n    if (currentProspectIds.every(id => selectedProspects.includes(id))) {\n      setSelectedProspects(prev => prev.filter(id => !currentProspectIds.includes(id)));\n    } else {\n      setSelectedProspects(prev => [...new Set([...prev, ...currentProspectIds])]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prospect-list-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedList,\n        onChange: e => setSelectedList(e.target.value),\n        children: lists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: list._id,\n          children: list.name\n        }, list._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nom de la nouvelle liste\",\n        value: newListName,\n        onChange: e => setNewListName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewList,\n        className: \"btn add-list-btn\",\n        children: \"Cr\\xE9er une liste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prospect-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowImportModal(true),\n        className: \"btn import-btn\",\n        children: \"Importer des prospects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteSelected,\n        className: `btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`,\n        disabled: loading || selectedProspects.length === 0,\n        children: \"Supprimer les prospects s\\xE9lectionn\\xE9s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectAll,\n        className: \"select-all-btn\",\n        children: displayedProspects.every(prospect => selectedProspects.includes(prospect._id)) ? \"Tout désélectionner\" : \"Sélectionner tout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Rechercher...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `prospect-content ${showImportModal ? 'dimmed' : ''}`,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prospect-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"prospect-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"S\\xE9lection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Soci\\xE9t\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LinkedIn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: displayedProspects.map(prospect => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedProspects.includes(prospect._id),\n                  onChange: () => handleSelectProspect(prospect._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`,\n                  alt: `${prospect.prenom} ${prospect.nom}`,\n                  className: \"prospect-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [prospect.prenom, \" \", prospect.nom]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: prospect.email || 'Non disponible'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: prospect.societe || 'Non disponible'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: prospect.linkedin,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"linkedin-btn\",\n                  children: \"profil\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)]\n            }, prospect._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Importer des prospects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          onFileLoaded: handleFileUpload,\n          cssClass: \"csv-reader-input\",\n          label: \"Importer une liste CSV\",\n          parserOptions: {\n            header: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportModal(false),\n          className: \"btn close-btn\",\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(ProspectListWidget, \"BSxe85+oCbJ5JYIsZzEszkFaRTM=\");\n_c = ProspectListWidget;\nexport default ProspectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ProspectListWidget\");","map":{"version":3,"names":["React","useState","useEffect","CSVReader","axios","jsxDEV","_jsxDEV","ProspectListWidget","prospects","onProspectsUpdate","_s","selectedProspects","setSelectedProspects","showImportModal","setShowImportModal","searchTerm","setSearchTerm","error","setError","loading","setLoading","displayedProspects","setDisplayedProspects","itemsPerPage","lists","setLists","selectedList","setSelectedList","newListName","setNewListName","loadMoreProspects","startIndex","length","filteredProspects","filter","prospect","_prospect$nom","_prospect$prenom","_prospect$societe","nom","toLowerCase","includes","prenom","societe","newProspects","slice","prev","fetchLists","token","localStorage","getItem","response","get","headers","Authorization","data","_id","console","fetchProspectsByList","createNewList","trim","post","name","list","handleFileUpload","handleDeleteSelected","handleSelectProspect","id","prospectId","handleSelectAll","currentProspectIds","map","every","Set","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","disabled","checked","src","alt","email","href","linkedin","rel","onFileLoaded","cssClass","label","parserOptions","header","_c","$RefreshReg$"],"sources":["/Users/dylan/Desktop/eve-prospect/frontend/src/components/ProspectListWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport axios from 'axios';\nimport './ProspectListWidget.css';\n\nconst ProspectListWidget = ({ prospects, onProspectsUpdate }) => {\n    const [selectedProspects, setSelectedProspects] = useState([]);\n    const [showImportModal, setShowImportModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [displayedProspects, setDisplayedProspects] = useState([]);\n    const [itemsPerPage] = useState(5);\n\n    // État pour gérer les listes de prospects\n    const [lists, setLists] = useState([]);\n    const [selectedList, setSelectedList] = useState(null);\n    const [newListName, setNewListName] = useState('');\n\n    // Charger les prospects par lots\n    const loadMoreProspects = () => {\n        const startIndex = displayedProspects.length;\n        const filteredProspects = prospects.filter(prospect =>\n            prospect.nom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            prospect.prenom?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            prospect.societe?.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n        const newProspects = filteredProspects.slice(startIndex, startIndex + itemsPerPage);\n        setDisplayedProspects(prev => [...prev, ...newProspects]);\n    };\n\n    useEffect(() => {\n        // Charger les listes de prospects\n        const fetchLists = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://localhost:5001/api/lists', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setLists(response.data.lists);\n                if (response.data.lists.length > 0) {\n                    setSelectedList(response.data.lists[0]._id);\n                }\n            } catch (error) {\n                console.error(\"Erreur lors du chargement des listes de prospects:\", error);\n            }\n        };\n\n        fetchLists();\n    }, []);\n\n    useEffect(() => {\n        const fetchProspectsByList = async () => {\n            try {\n                if (selectedList) {\n                    const token = localStorage.getItem('token');\n                    const response = await axios.get(`http://localhost:5001/api/prospects/${selectedList}`, {\n                        headers: { Authorization: `Bearer ${token}` }\n                    });\n                    onProspectsUpdate(response.data.prospects);\n                    setDisplayedProspects(response.data.prospects.slice(0, itemsPerPage));\n                }\n            } catch (error) {\n                console.error(\"Erreur lors du chargement des prospects par liste:\", error);\n            }\n        };\n\n        fetchProspectsByList();\n    }, [selectedList]);\n\n    // Créer une nouvelle liste\n    const createNewList = async () => {\n        if (newListName.trim() === '') return;\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.post('http://localhost:5001/api/lists', { name: newListName }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setLists([...lists, response.data.list]);\n            setNewListName('');\n        } catch (error) {\n            console.error(\"Erreur lors de la création d'une nouvelle liste:\", error);\n        }\n    };\n\n    const handleFileUpload = async (data) => {\n        // Votre code pour gérer l'importation\n    };\n\n    const handleDeleteSelected = async () => {\n        // Votre code pour supprimer les prospects sélectionnés\n    };\n\n    const handleSelectProspect = (id) => {\n        setSelectedProspects(prev =>\n            prev.includes(id) ? prev.filter(prospectId => prospectId !== id) : [...prev, id]\n        );\n    };\n\n    const handleSelectAll = () => {\n        const currentProspectIds = displayedProspects.map(prospect => prospect._id);\n        if (currentProspectIds.every(id => selectedProspects.includes(id))) {\n            setSelectedProspects(prev => prev.filter(id => !currentProspectIds.includes(id)));\n        } else {\n            setSelectedProspects(prev => [...new Set([...prev, ...currentProspectIds])]);\n        }\n    };\n\n    return (\n        <div className=\"prospect-list-widget\">\n            {/* Sélection de la liste */}\n            <div className=\"list-selection\">\n                <select value={selectedList} onChange={(e) => setSelectedList(e.target.value)}>\n                    {lists.map(list => (\n                        <option key={list._id} value={list._id}>{list.name}</option>\n                    ))}\n                </select>\n                <input\n                    type=\"text\"\n                    placeholder=\"Nom de la nouvelle liste\"\n                    value={newListName}\n                    onChange={(e) => setNewListName(e.target.value)}\n                />\n                <button onClick={createNewList} className=\"btn add-list-btn\">Créer une liste</button>\n            </div>\n\n            <div className=\"prospect-actions\">\n                <button onClick={() => setShowImportModal(true)} className=\"btn import-btn\">\n                    Importer des prospects\n                </button>\n                <button\n                    onClick={handleDeleteSelected}\n                    className={`btn delete-btn ${selectedProspects.length > 0 ? 'enabled' : 'disabled'}`}\n                    disabled={loading || selectedProspects.length === 0}\n                >\n                    Supprimer les prospects sélectionnés\n                </button>\n                <button onClick={handleSelectAll} className=\"select-all-btn\">\n                    {displayedProspects.every(prospect => selectedProspects.includes(prospect._id)) ? \"Tout désélectionner\" : \"Sélectionner tout\"}\n                </button>\n                <input\n                    type=\"text\"\n                    className=\"search-input\"\n                    placeholder=\"Rechercher...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n\n            <div className={`prospect-content ${showImportModal ? 'dimmed' : ''}`}>\n                {loading ? (\n                    <div className=\"loading\">Chargement...</div>\n                ) : (\n                    <div className=\"prospect-table-container\">\n                        <table className=\"prospect-table\">\n                            <thead>\n                            <tr>\n                                <th>Sélection</th>\n                                <th>Photo</th>\n                                <th>Nom</th>\n                                <th>Email</th>\n                                <th>Société</th>\n                                <th>LinkedIn</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {displayedProspects.map((prospect) => (\n                                <tr key={prospect._id}>\n                                    <td>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={selectedProspects.includes(prospect._id)}\n                                            onChange={() => handleSelectProspect(prospect._id)}\n                                        />\n                                    </td>\n                                    <td>\n                                        <img\n                                            src={`https://ui-avatars.com/api/?name=${prospect.prenom}+${prospect.nom}&background=random`}\n                                            alt={`${prospect.prenom} ${prospect.nom}`}\n                                            className=\"prospect-avatar\"\n                                        />\n                                    </td>\n                                    <td>{prospect.prenom} {prospect.nom}</td>\n                                    <td>{prospect.email || 'Non disponible'}</td>\n                                    <td>{prospect.societe || 'Non disponible'}</td>\n                                    <td>\n                                        <a\n                                            href={prospect.linkedin}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            className=\"linkedin-btn\"\n                                        >\n                                            profil\n                                        </a>\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n            </div>\n\n            {showImportModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Importer des prospects</h3>\n                        <CSVReader\n                            onFileLoaded={handleFileUpload}\n                            cssClass=\"csv-reader-input\"\n                            label=\"Importer une liste CSV\"\n                            parserOptions={{ header: false }}\n                        />\n                        <button onClick={() => setShowImportModal(false)} className=\"btn close-btn\">\n                            Fermer\n                        </button>\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProspectListWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}